[project]
name = "aibtcdev-daos"
description = ""
authors = []
telemetry = true
cache_dir = "./.cache"

[repl.analysis]
passes = ["check_checker"]
check_checker = { trusted_sender = false, trusted_caller = false, callee_filter = false }

# external contracts loaded by clarinet

[[project.requirements]]
contract_id = 'SP2PABAF9FTAJYNFZH93XENAJ8FVY99RRM50D2JG9.nft-trait'

[[project.requirements]]
contract_id = 'SP3FBR2AGK5H9QBDH3EEN6DF8EK8JY7RX8QJ5SVTE.sip-010-trait-ft-standard'

[[project.requirements]]
contract_id = 'ST3VXT52QEQPZ5246A16RFNMR1PRJ96JK6YYX37N8.sip-010-trait-ft-standard'

# testnet POX contract
[[project.requirements]]
contract_id = 'ST000000000000000000002AMW42H.pox-4'

# aibtc testnet bitflow core (allows pool creation)
[[project.requirements]]
contract_id = 'STTWD9SPRQVD3P733V89SV0P8RZRZNQADG034F0A.xyk-core-v-1-2'

# aibtc testnet bitflow pool trait
[[project.requirements]]
contract_id = 'STTWD9SPRQVD3P733V89SV0P8RZRZNQADG034F0A.xyk-pool-trait-v-1-2'

# faktory testnet sBTC contract
[[project.requirements]]
contract_id = 'STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token'

# faktory SIP-010 trait
[[project.requirements]]
contract_id = 'STTWD9SPRQVD3P733V89SV0P8RZRZNQADG034F0A.faktory-trait-v1'

# faktory DEX trait
[[project.requirements]]
contract_id = 'STTWD9SPRQVD3P733V89SV0P8RZRZNQADG034F0A.faktory-dex-trait-v1-1'

# agent account

[contracts.aibtc-agent-account]
path = "contracts/aibtc-agent-account.clar"
clarity_version = 3
epoch = 3.1

[contracts.aibtc-agent-account-traits]
path = "contracts/traits/aibtc-agent-account-traits.clar"
clarity_version = 3
epoch = 3.1

# protocol fees

[contracts.aibtc-protocol-fees]
path = "contracts/protocol-fees.clar"
clarity_version = 3
epoch = 3.1

# dao traits

[contracts.aibtc-dao-traits]
path = "contracts/traits/aibtc-dao-traits.clar"
clarity_version = 3
epoch = 3.1

[contracts.aibtc-base-dao-trait]
path = "contracts/traits/aibtc-base-dao-trait.clar"
clarity_version = 3
epoch = 3.1

# dao base contract

[contracts.aibtc-base-dao]
path = "contracts/dao/aibtc-base-dao.clar"
clarity_version = 3
epoch = 3.1

# dao extensions

[contracts.aibtc-action-proposal-voting]
path = 'contracts/dao/extensions/aibtc-action-proposal-voting.clar'
clarity_version = 3
epoch = 3.1

[contracts.aibtc-dao-charter]
path = 'contracts/dao/extensions/aibtc-dao-charter.clar'
clarity_version = 3
epoch = 3.1

[contracts.aibtc-dao-epoch]
path = 'contracts/dao/extensions/aibtc-dao-epoch.clar'
clarity_version = 3
epoch = 3.1

[contracts.aibtc-dao-users]
path = 'contracts/dao/extensions/aibtc-dao-users.clar'
clarity_version = 3
epoch = 3.1

[contracts.aibtc-onchain-messaging]
path = 'contracts/dao/extensions/aibtc-onchain-messaging.clar'
clarity_version = 3
epoch = 3.1

[contracts.aibtc-rewards-account]
path = 'contracts/dao/extensions/aibtc-rewards-account.clar'
clarity_version = 3
epoch = 3.1

[contracts.aibtc-token-owner]
path = 'contracts/dao/extensions/aibtc-token-owner.clar'
clarity_version = 3
epoch = 3.1

[contracts.aibtc-treasury]
path = 'contracts/dao/extensions/aibtc-treasury.clar'
clarity_version = 3
epoch = 3.1

# dao actions (as extensions)

[contracts.aibtc-action-send-message]
path = 'contracts/dao/actions/aibtc-action-send-message.clar'
clarity_version = 3
epoch = 3.1

# dao proposals

[contracts.aibtc-base-initialize-dao]
path = 'contracts/dao/proposals/aibtc-base-initialize-dao.clar'
clarity_version = 3
epoch = 3.1

# faktory contracts

[contracts.aibtc-token]
path = 'contracts/dao/token/aibtc-token.clar'
clarity_version = 2
epoch = 3.1

[contracts.aibtc-pre-dex]
path = 'contracts/dao/token/aibtc-pre-dex.clar'
clarity_version = 2
epoch = 3.1

[contracts.aibtc-token-dex]
path = 'contracts/dao/token/aibtc-token-dex.clar'
clarity_version = 2
epoch = 3.1

[contracts.aibtc-bitflow-pool]
path = 'contracts/dao/token/aibtc-bitflow-pool.clar'
clarity_version = 2
epoch = 3.1
