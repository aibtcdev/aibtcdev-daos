[
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__callback() should respond with (ok true)",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "callback",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM",
      "0x74657374"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24737,
        "read_count": 3,
        "runtime": 25470
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if action is not a dao extension",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if action is not a dao extension",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.unknown-action",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 168,
        "write_count": 3,
        "read_length": 56298,
        "read_count": 43,
        "runtime": 152150
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 165,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if parameters are not correctly formatted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if parameters are not correctly formatted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0c0000000104746573740b000000010100000000000000000000000000000001",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 168,
        "write_count": 3,
        "read_length": 57824,
        "read_count": 46,
        "runtime": 159737
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 165,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if called twice in the same btc block",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if called twice in the same btc block",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if called twice in the same btc block",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if called twice in the same btc block",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if called twice in the same btc block",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if called twice in the same btc block",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if called twice in the same btc block",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if called twice in the same btc block",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if called twice in the same btc block",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if called twice in the same btc block",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if called twice in the same btc block",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if called twice in the same btc block",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if called twice in the same btc block",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if called twice in the same btc block",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if called twice in the same btc block",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if called twice in the same btc block",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if called twice in the same btc block",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if called twice in the same btc block",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if called twice in the same btc block",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if called twice in the same btc block",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if called twice in the same btc block",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if called twice in the same btc block",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if called twice in the same btc block",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if called twice in the same btc block",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if called twice in the same btc block",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u889918"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if called twice in the same btc block",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if called twice in the same btc block",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 2056,
        "write_count": 15,
        "read_length": 87350,
        "read_count": 84,
        "runtime": 450062
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 3028,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if called twice in the same btc block",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 57838,
        "read_count": 41,
        "runtime": 184633
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if called twice in the same btc block",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 1888,
        "write_count": 12,
        "read_length": 87346,
        "read_count": 78,
        "runtime": 423372
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2863,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if caller has an insufficient balance",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if caller has an insufficient balance",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if caller has an insufficient balance",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if caller has an insufficient balance",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if caller has an insufficient balance",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if caller has an insufficient balance",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if caller has an insufficient balance",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if caller has an insufficient balance",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if caller has an insufficient balance",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if caller has an insufficient balance",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if caller has an insufficient balance",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if caller has an insufficient balance",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if caller has an insufficient balance",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if caller has an insufficient balance",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if caller has an insufficient balance",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if caller has an insufficient balance",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if caller has an insufficient balance",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if caller has an insufficient balance",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if caller has an insufficient balance",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if caller has an insufficient balance",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if caller has an insufficient balance",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if caller has an insufficient balance",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if caller has an insufficient balance",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() fails if caller has an insufficient balance",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 168,
        "write_count": 3,
        "read_length": 57842,
        "read_count": 47,
        "runtime": 211793
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 165,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() succeeds if called with sufficient balance",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() succeeds if called with sufficient balance",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() succeeds if called with sufficient balance",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() succeeds if called with sufficient balance",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() succeeds if called with sufficient balance",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() succeeds if called with sufficient balance",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() succeeds if called with sufficient balance",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() succeeds if called with sufficient balance",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() succeeds if called with sufficient balance",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() succeeds if called with sufficient balance",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() succeeds if called with sufficient balance",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() succeeds if called with sufficient balance",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() succeeds if called with sufficient balance",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() succeeds if called with sufficient balance",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() succeeds if called with sufficient balance",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() succeeds if called with sufficient balance",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() succeeds if called with sufficient balance",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() succeeds if called with sufficient balance",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() succeeds if called with sufficient balance",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() succeeds if called with sufficient balance",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() succeeds if called with sufficient balance",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() succeeds if called with sufficient balance",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() succeeds if called with sufficient balance",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() succeeds if called with sufficient balance",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() succeeds if called with sufficient balance",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u229452"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() succeeds if called with sufficient balance",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__create-action-proposal() succeeds if called with sufficient balance",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 2056,
        "write_count": 15,
        "read_length": 87350,
        "read_count": 84,
        "runtime": 450062
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 3028,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal not found",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "vote-on-action-proposal",
    "args": [
      "u999",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24755,
        "read_count": 4,
        "runtime": 27584
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if voter has an insufficient balance",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if voter has an insufficient balance",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if voter has an insufficient balance",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if voter has an insufficient balance",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if voter has an insufficient balance",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if voter has an insufficient balance",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if voter has an insufficient balance",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if voter has an insufficient balance",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if voter has an insufficient balance",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if voter has an insufficient balance",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if voter has an insufficient balance",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if voter has an insufficient balance",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if voter has an insufficient balance",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if voter has an insufficient balance",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if voter has an insufficient balance",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if voter has an insufficient balance",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if voter has an insufficient balance",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if voter has an insufficient balance",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if voter has an insufficient balance",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if voter has an insufficient balance",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if voter has an insufficient balance",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if voter has an insufficient balance",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if voter has an insufficient balance",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if voter has an insufficient balance",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if voter has an insufficient balance",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if voter has an insufficient balance",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u426176"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if voter has an insufficient balance",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 2056,
        "write_count": 15,
        "read_length": 87350,
        "read_count": 84,
        "runtime": 450062
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 3028,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if voter has an insufficient balance",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "vote-on-action-proposal",
    "args": [
      "u1",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 168,
        "write_count": 3,
        "read_length": 38784,
        "read_count": 26,
        "runtime": 92748
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 165,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal is already concluded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal is already concluded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal is already concluded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal is already concluded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal is already concluded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal is already concluded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal is already concluded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal is already concluded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal is already concluded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal is already concluded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal is already concluded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal is already concluded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u343953"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal is already concluded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal is already concluded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u255394"
    ],
    "cost_result": {
      "total": {
        "write_length": 58,
        "write_count": 11,
        "read_length": 46503,
        "read_count": 38,
        "runtime": 176096
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1363,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "get-total-proposals",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24827,
        "read_count": 8,
        "runtime": 29318
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 2056,
        "write_count": 15,
        "read_length": 87350,
        "read_count": 84,
        "runtime": 450062
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 3028,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "vote-on-action-proposal",
    "args": [
      "u1",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 307,
        "write_count": 2,
        "read_length": 38784,
        "read_count": 24,
        "runtime": 109926
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 305,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "conclude-action-proposal",
    "args": [
      "u1",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message"
    ],
    "cost_result": {
      "total": {
        "write_length": 356,
        "write_count": 8,
        "read_length": 91956,
        "read_count": 78,
        "runtime": 641713
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1006,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "vote-on-action-proposal",
    "args": [
      "u1",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 38816,
        "read_count": 20,
        "runtime": 73845
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too early",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too early",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too early",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too early",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too early",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too early",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too early",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too early",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too early",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too early",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too early",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too early",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too early",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too early",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too early",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too early",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too early",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too early",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too early",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too early",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too early",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too early",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too early",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too early",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too early",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too early",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u700693"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too early",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 2056,
        "write_count": 15,
        "read_length": 87350,
        "read_count": 84,
        "runtime": 450062
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 3028,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too early",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "vote-on-action-proposal",
    "args": [
      "u1",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 38782,
        "read_count": 21,
        "runtime": 72073
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too late",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too late",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too late",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too late",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too late",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too late",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too late",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too late",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too late",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too late",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too late",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too late",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too late",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too late",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too late",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too late",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too late",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too late",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too late",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too late",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too late",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too late",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too late",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too late",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too late",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too late",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u612251"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too late",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 2056,
        "write_count": 15,
        "read_length": 87350,
        "read_count": 84,
        "runtime": 450062
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 3028,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if proposal vote is too late",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "vote-on-action-proposal",
    "args": [
      "u1",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 38784,
        "read_count": 22,
        "runtime": 75205
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if updated vote matches existing vote",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if updated vote matches existing vote",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if updated vote matches existing vote",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if updated vote matches existing vote",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if updated vote matches existing vote",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if updated vote matches existing vote",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if updated vote matches existing vote",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if updated vote matches existing vote",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if updated vote matches existing vote",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if updated vote matches existing vote",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if updated vote matches existing vote",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if updated vote matches existing vote",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if updated vote matches existing vote",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if updated vote matches existing vote",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if updated vote matches existing vote",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if updated vote matches existing vote",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if updated vote matches existing vote",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if updated vote matches existing vote",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if updated vote matches existing vote",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if updated vote matches existing vote",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if updated vote matches existing vote",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if updated vote matches existing vote",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if updated vote matches existing vote",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if updated vote matches existing vote",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if updated vote matches existing vote",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if updated vote matches existing vote",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u667524"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if updated vote matches existing vote",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 2056,
        "write_count": 15,
        "read_length": 87350,
        "read_count": 84,
        "runtime": 450062
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 3028,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if updated vote matches existing vote",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "vote-on-action-proposal",
    "args": [
      "u1",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 307,
        "write_count": 2,
        "read_length": 38784,
        "read_count": 24,
        "runtime": 109926
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 305,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() fails if updated vote matches existing vote",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "vote-on-action-proposal",
    "args": [
      "u1",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 38820,
        "read_count": 22,
        "runtime": 83172
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds and records vote info",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds and records vote info",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds and records vote info",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds and records vote info",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds and records vote info",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds and records vote info",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds and records vote info",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds and records vote info",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds and records vote info",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds and records vote info",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds and records vote info",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds and records vote info",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds and records vote info",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds and records vote info",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds and records vote info",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds and records vote info",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds and records vote info",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds and records vote info",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds and records vote info",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds and records vote info",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds and records vote info",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds and records vote info",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds and records vote info",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds and records vote info",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds and records vote info",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds and records vote info",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u172201"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds and records vote info",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 2056,
        "write_count": 15,
        "read_length": 87350,
        "read_count": 84,
        "runtime": 450062
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 3028,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds and records vote info",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "vote-on-action-proposal",
    "args": [
      "u1",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 307,
        "write_count": 2,
        "read_length": 38784,
        "read_count": 24,
        "runtime": 109926
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 305,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds if vote is cast then changed during vote window",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds if vote is cast then changed during vote window",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds if vote is cast then changed during vote window",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds if vote is cast then changed during vote window",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds if vote is cast then changed during vote window",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds if vote is cast then changed during vote window",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds if vote is cast then changed during vote window",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds if vote is cast then changed during vote window",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds if vote is cast then changed during vote window",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds if vote is cast then changed during vote window",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds if vote is cast then changed during vote window",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds if vote is cast then changed during vote window",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds if vote is cast then changed during vote window",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds if vote is cast then changed during vote window",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds if vote is cast then changed during vote window",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds if vote is cast then changed during vote window",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds if vote is cast then changed during vote window",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds if vote is cast then changed during vote window",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds if vote is cast then changed during vote window",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds if vote is cast then changed during vote window",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds if vote is cast then changed during vote window",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds if vote is cast then changed during vote window",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds if vote is cast then changed during vote window",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds if vote is cast then changed during vote window",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds if vote is cast then changed during vote window",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds if vote is cast then changed during vote window",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u451032"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds if vote is cast then changed during vote window",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 2056,
        "write_count": 15,
        "read_length": 87350,
        "read_count": 84,
        "runtime": 450062
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 3028,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds if vote is cast then changed during vote window",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "vote-on-action-proposal",
    "args": [
      "u1",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 307,
        "write_count": 2,
        "read_length": 38784,
        "read_count": 24,
        "runtime": 109926
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 305,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds if vote is cast then changed during vote window",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "vote-on-action-proposal",
    "args": [
      "u1",
      "false"
    ],
    "cost_result": {
      "total": {
        "write_length": 516,
        "write_count": 3,
        "read_length": 38820,
        "read_count": 25,
        "runtime": 127913
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 513,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__vote-on-action-proposal() succeeds if vote is cast then changed during vote window",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "vote-on-action-proposal",
    "args": [
      "u1",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 516,
        "write_count": 3,
        "read_length": 38820,
        "read_count": 25,
        "runtime": 127913
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 513,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if proposal not found",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "veto-action-proposal",
    "args": [
      "u999"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24755,
        "read_count": 4,
        "runtime": 27200
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if proposal is already concluded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if proposal is already concluded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if proposal is already concluded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if proposal is already concluded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if proposal is already concluded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if proposal is already concluded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if proposal is already concluded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if proposal is already concluded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if proposal is already concluded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if proposal is already concluded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if proposal is already concluded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if proposal is already concluded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u391277"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if proposal is already concluded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if proposal is already concluded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u946230"
    ],
    "cost_result": {
      "total": {
        "write_length": 58,
        "write_count": 11,
        "read_length": 46503,
        "read_count": 38,
        "runtime": 176096
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1363,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "get-total-proposals",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24827,
        "read_count": 8,
        "runtime": 29318
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 2056,
        "write_count": 15,
        "read_length": 87350,
        "read_count": 84,
        "runtime": 450062
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 3028,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "vote-on-action-proposal",
    "args": [
      "u1",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 307,
        "write_count": 2,
        "read_length": 38784,
        "read_count": 24,
        "runtime": 109926
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 305,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "conclude-action-proposal",
    "args": [
      "u1",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message"
    ],
    "cost_result": {
      "total": {
        "write_length": 356,
        "write_count": 8,
        "read_length": 91956,
        "read_count": 78,
        "runtime": 641713
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1006,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "veto-action-proposal",
    "args": [
      "u1"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 38718,
        "read_count": 19,
        "runtime": 64704
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too early",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too early",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too early",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too early",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too early",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too early",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too early",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too early",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too early",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too early",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too early",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too early",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too early",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too early",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too early",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too early",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too early",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too early",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too early",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too early",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too early",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too early",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too early",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too early",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too early",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too early",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u650010"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too early",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 2056,
        "write_count": 15,
        "read_length": 87350,
        "read_count": 84,
        "runtime": 450062
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 3028,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too early",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "veto-action-proposal",
    "args": [
      "u1"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 38720,
        "read_count": 20,
        "runtime": 67836
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too late",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too late",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too late",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too late",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too late",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too late",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too late",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too late",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too late",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too late",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too late",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too late",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too late",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too late",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too late",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too late",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too late",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too late",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too late",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too late",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too late",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too late",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too late",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too late",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too late",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too late",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u350583"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too late",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 2056,
        "write_count": 15,
        "read_length": 87350,
        "read_count": 84,
        "runtime": 450062
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 3028,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote is too late",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "veto-action-proposal",
    "args": [
      "u1"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 38722,
        "read_count": 21,
        "runtime": 70968
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote already recorded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote already recorded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote already recorded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote already recorded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote already recorded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote already recorded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote already recorded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote already recorded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote already recorded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote already recorded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote already recorded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote already recorded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote already recorded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote already recorded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote already recorded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote already recorded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote already recorded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote already recorded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote already recorded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote already recorded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote already recorded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote already recorded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote already recorded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote already recorded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote already recorded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote already recorded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u255199"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote already recorded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 2056,
        "write_count": 15,
        "read_length": 87350,
        "read_count": 84,
        "runtime": 450062
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 3028,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote already recorded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "veto-action-proposal",
    "args": [
      "u1"
    ],
    "cost_result": {
      "total": {
        "write_length": 289,
        "write_count": 2,
        "read_length": 38784,
        "read_count": 24,
        "runtime": 105923
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 287,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() fails if veto vote already recorded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "veto-action-proposal",
    "args": [
      "u1"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 38802,
        "read_count": 22,
        "runtime": 74409
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() succeeds and records veto vote info",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() succeeds and records veto vote info",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() succeeds and records veto vote info",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() succeeds and records veto vote info",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() succeeds and records veto vote info",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() succeeds and records veto vote info",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() succeeds and records veto vote info",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() succeeds and records veto vote info",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() succeeds and records veto vote info",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() succeeds and records veto vote info",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() succeeds and records veto vote info",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() succeeds and records veto vote info",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() succeeds and records veto vote info",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() succeeds and records veto vote info",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() succeeds and records veto vote info",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() succeeds and records veto vote info",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() succeeds and records veto vote info",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() succeeds and records veto vote info",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() succeeds and records veto vote info",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() succeeds and records veto vote info",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() succeeds and records veto vote info",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() succeeds and records veto vote info",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() succeeds and records veto vote info",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() succeeds and records veto vote info",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() succeeds and records veto vote info",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() succeeds and records veto vote info",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u891737"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() succeeds and records veto vote info",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 2056,
        "write_count": 15,
        "read_length": 87350,
        "read_count": 84,
        "runtime": 450062
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 3028,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__veto-action-proposal() succeeds and records veto vote info",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "veto-action-proposal",
    "args": [
      "u1"
    ],
    "cost_result": {
      "total": {
        "write_length": 289,
        "write_count": 2,
        "read_length": 38784,
        "read_count": 24,
        "runtime": 105923
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 287,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal not found",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "conclude-action-proposal",
    "args": [
      "u999",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24755,
        "read_count": 4,
        "runtime": 42837
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if action is not an extension in the dao",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if action is not an extension in the dao",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if action is not an extension in the dao",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if action is not an extension in the dao",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if action is not an extension in the dao",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if action is not an extension in the dao",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if action is not an extension in the dao",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if action is not an extension in the dao",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if action is not an extension in the dao",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if action is not an extension in the dao",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if action is not an extension in the dao",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if action is not an extension in the dao",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if action is not an extension in the dao",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if action is not an extension in the dao",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if action is not an extension in the dao",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if action is not an extension in the dao",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if action is not an extension in the dao",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if action is not an extension in the dao",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if action is not an extension in the dao",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if action is not an extension in the dao",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if action is not an extension in the dao",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if action is not an extension in the dao",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if action is not an extension in the dao",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if action is not an extension in the dao",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if action is not an extension in the dao",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if action is not an extension in the dao",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u604481"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if action is not an extension in the dao",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 2056,
        "write_count": 15,
        "read_length": 87350,
        "read_count": 84,
        "runtime": 450062
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 3028,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if action is not an extension in the dao",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "vote-on-action-proposal",
    "args": [
      "u1",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 307,
        "write_count": 2,
        "read_length": 38784,
        "read_count": 24,
        "runtime": 109926
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 305,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if action is not an extension in the dao",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "conclude-action-proposal",
    "args": [
      "u1",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.unknown-action"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 35752,
        "read_count": 15,
        "runtime": 130170
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is already concluded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is already concluded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is already concluded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is already concluded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is already concluded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is already concluded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is already concluded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is already concluded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is already concluded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is already concluded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is already concluded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is already concluded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u177413"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is already concluded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is already concluded",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u760434"
    ],
    "cost_result": {
      "total": {
        "write_length": 58,
        "write_count": 11,
        "read_length": 46503,
        "read_count": 38,
        "runtime": 176096
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1363,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "get-total-proposals",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24827,
        "read_count": 8,
        "runtime": 29318
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 2056,
        "write_count": 15,
        "read_length": 87350,
        "read_count": 84,
        "runtime": 450062
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 3028,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "vote-on-action-proposal",
    "args": [
      "u1",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 307,
        "write_count": 2,
        "read_length": 38784,
        "read_count": 24,
        "runtime": 109926
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 305,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "conclude-action-proposal",
    "args": [
      "u1",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message"
    ],
    "cost_result": {
      "total": {
        "write_length": 356,
        "write_count": 8,
        "read_length": 91956,
        "read_count": 78,
        "runtime": 641713
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1006,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is already concluded",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "conclude-action-proposal",
    "args": [
      "u1",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 35765,
        "read_count": 15,
        "runtime": 114244
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in voting period",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in voting period",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in voting period",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in voting period",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in voting period",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in voting period",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in voting period",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in voting period",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in voting period",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in voting period",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in voting period",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in voting period",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in voting period",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in voting period",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in voting period",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in voting period",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in voting period",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in voting period",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in voting period",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in voting period",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in voting period",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in voting period",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in voting period",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in voting period",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in voting period",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in voting period",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u791099"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in voting period",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 2056,
        "write_count": 15,
        "read_length": 87350,
        "read_count": 84,
        "runtime": 450062
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 3028,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in voting period",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "vote-on-action-proposal",
    "args": [
      "u1",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 307,
        "write_count": 2,
        "read_length": 38784,
        "read_count": 24,
        "runtime": 109926
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 305,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in voting period",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "conclude-action-proposal",
    "args": [
      "u1",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 35765,
        "read_count": 15,
        "runtime": 116942
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in veto period",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in veto period",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in veto period",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in veto period",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in veto period",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in veto period",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in veto period",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in veto period",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in veto period",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in veto period",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in veto period",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in veto period",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in veto period",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in veto period",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in veto period",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in veto period",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in veto period",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in veto period",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in veto period",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in veto period",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in veto period",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in veto period",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in veto period",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in veto period",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in veto period",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in veto period",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u427169"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in veto period",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 2056,
        "write_count": 15,
        "read_length": 87350,
        "read_count": 84,
        "runtime": 450062
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 3028,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in veto period",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "veto-action-proposal",
    "args": [
      "u1"
    ],
    "cost_result": {
      "total": {
        "write_length": 289,
        "write_count": 2,
        "read_length": 38784,
        "read_count": 24,
        "runtime": 105923
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 287,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if proposal is in veto period",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "conclude-action-proposal",
    "args": [
      "u1",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 35765,
        "read_count": 15,
        "runtime": 118375
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if provided action does not match proposal action",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if provided action does not match proposal action",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if provided action does not match proposal action",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if provided action does not match proposal action",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if provided action does not match proposal action",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if provided action does not match proposal action",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if provided action does not match proposal action",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if provided action does not match proposal action",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if provided action does not match proposal action",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if provided action does not match proposal action",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if provided action does not match proposal action",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if provided action does not match proposal action",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if provided action does not match proposal action",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if provided action does not match proposal action",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if provided action does not match proposal action",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if provided action does not match proposal action",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if provided action does not match proposal action",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if provided action does not match proposal action",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if provided action does not match proposal action",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if provided action does not match proposal action",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if provided action does not match proposal action",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if provided action does not match proposal action",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if provided action does not match proposal action",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if provided action does not match proposal action",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if provided action does not match proposal action",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if provided action does not match proposal action",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u134661"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if provided action does not match proposal action",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 2056,
        "write_count": 15,
        "read_length": 87350,
        "read_count": 84,
        "runtime": 450062
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 3028,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if provided action does not match proposal action",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "vote-on-action-proposal",
    "args": [
      "u1",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 307,
        "write_count": 2,
        "read_length": 38784,
        "read_count": 24,
        "runtime": 109926
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 305,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() fails if provided action does not match proposal action",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "conclude-action-proposal",
    "args": [
      "u1",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.unknown-action"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 35752,
        "read_count": 15,
        "runtime": 130001
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() succeeds and executes the action if all criteria are met",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() succeeds and executes the action if all criteria are met",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() succeeds and executes the action if all criteria are met",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() succeeds and executes the action if all criteria are met",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() succeeds and executes the action if all criteria are met",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() succeeds and executes the action if all criteria are met",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() succeeds and executes the action if all criteria are met",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() succeeds and executes the action if all criteria are met",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() succeeds and executes the action if all criteria are met",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() succeeds and executes the action if all criteria are met",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() succeeds and executes the action if all criteria are met",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() succeeds and executes the action if all criteria are met",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() succeeds and executes the action if all criteria are met",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() succeeds and executes the action if all criteria are met",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() succeeds and executes the action if all criteria are met",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() succeeds and executes the action if all criteria are met",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() succeeds and executes the action if all criteria are met",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() succeeds and executes the action if all criteria are met",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() succeeds and executes the action if all criteria are met",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() succeeds and executes the action if all criteria are met",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() succeeds and executes the action if all criteria are met",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() succeeds and executes the action if all criteria are met",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() succeeds and executes the action if all criteria are met",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() succeeds and executes the action if all criteria are met",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() succeeds and executes the action if all criteria are met",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() succeeds and executes the action if all criteria are met",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u778076"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() succeeds and executes the action if all criteria are met",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() succeeds and executes the action if all criteria are met",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() succeeds and executes the action if all criteria are met",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u805987"
    ],
    "cost_result": {
      "total": {
        "write_length": 58,
        "write_count": 11,
        "read_length": 46503,
        "read_count": 38,
        "runtime": 176096
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1363,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() succeeds and executes the action if all criteria are met",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() succeeds and executes the action if all criteria are met",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() succeeds and executes the action if all criteria are met",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u209646"
    ],
    "cost_result": {
      "total": {
        "write_length": 58,
        "write_count": 11,
        "read_length": 46503,
        "read_count": 38,
        "runtime": 176096
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1363,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() succeeds and executes the action if all criteria are met",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() succeeds and executes the action if all criteria are met",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() succeeds and executes the action if all criteria are met",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u169274"
    ],
    "cost_result": {
      "total": {
        "write_length": 58,
        "write_count": 11,
        "read_length": 46503,
        "read_count": 38,
        "runtime": 176096
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1363,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() succeeds and executes the action if all criteria are met",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 2056,
        "write_count": 15,
        "read_length": 87350,
        "read_count": 84,
        "runtime": 450062
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 3028,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() succeeds and executes the action if all criteria are met",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "vote-on-action-proposal",
    "args": [
      "u1",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 307,
        "write_count": 2,
        "read_length": 38784,
        "read_count": 24,
        "runtime": 109926
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 305,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() succeeds and executes the action if all criteria are met",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "vote-on-action-proposal",
    "args": [
      "u1",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 475,
        "write_count": 5,
        "read_length": 38788,
        "read_count": 30,
        "runtime": 136616
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 470,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() succeeds and executes the action if all criteria are met",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "vote-on-action-proposal",
    "args": [
      "u1",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 475,
        "write_count": 5,
        "read_length": 38788,
        "read_count": 30,
        "runtime": 136616
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 470,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() succeeds and executes the action if all criteria are met",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "vote-on-action-proposal",
    "args": [
      "u1",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 475,
        "write_count": 5,
        "read_length": 38788,
        "read_count": 30,
        "runtime": 136616
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 470,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__public functions: aibtc-action-proposal-voting__conclude-action-proposal() succeeds and executes the action if all criteria are met",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "conclude-action-proposal",
    "args": [
      "u1",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message"
    ],
    "cost_result": {
      "total": {
        "write_length": 356,
        "write_count": 8,
        "read_length": 91956,
        "read_count": 78,
        "runtime": 641713
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1006,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__read-only functions: aibtc-action-proposal-voting__get-voting-power() returns expected value",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "get-voting-power",
    "args": [
      "u1",
      "ST1SJ3DTE5DN7X54YDH5D64R3BCB6A2AG2ZQ8YPD5"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24755,
        "read_count": 4,
        "runtime": 27059
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__read-only functions: aibtc-action-proposal-voting__get-proposal() returns expected value",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "get-proposal",
    "args": [
      "u1"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24755,
        "read_count": 4,
        "runtime": 26812
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__read-only functions: aibtc-action-proposal-voting__get-vote-record() returns expected value",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "get-vote-record",
    "args": [
      "u1",
      "ST1SJ3DTE5DN7X54YDH5D64R3BCB6A2AG2ZQ8YPD5"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24799,
        "read_count": 4,
        "runtime": 28557
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__read-only functions: aibtc-action-proposal-voting__get-veto-vote-record() returns expected value",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "get-veto-vote-record",
    "args": [
      "u1",
      "ST1SJ3DTE5DN7X54YDH5D64R3BCB6A2AG2ZQ8YPD5"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24799,
        "read_count": 4,
        "runtime": 28557
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__read-only functions: aibtc-action-proposal-voting__get-vote-records() returns expected value",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "get-vote-records",
    "args": [
      "u1",
      "ST1SJ3DTE5DN7X54YDH5D64R3BCB6A2AG2ZQ8YPD5"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24861,
        "read_count": 5,
        "runtime": 35301
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__read-only functions: aibtc-action-proposal-voting__get-total-proposals() returns expected value",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "get-total-proposals",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24827,
        "read_count": 8,
        "runtime": 29318
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__read-only functions: aibtc-action-proposal-voting__get-voting-configuration() returns expected value",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "get-voting-configuration",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24737,
        "read_count": 3,
        "runtime": 27881
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__read-only functions: aibtc-action-proposal-voting__get-liquid-supply() returns expected value",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__read-only functions: aibtc-action-proposal-voting__get-liquid-supply() returns expected value",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__read-only functions: aibtc-action-proposal-voting__get-liquid-supply() returns expected value",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__read-only functions: aibtc-action-proposal-voting__get-liquid-supply() returns expected value",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__read-only functions: aibtc-action-proposal-voting__get-liquid-supply() returns expected value",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__read-only functions: aibtc-action-proposal-voting__get-liquid-supply() returns expected value",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__read-only functions: aibtc-action-proposal-voting__get-liquid-supply() returns expected value",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__read-only functions: aibtc-action-proposal-voting__get-liquid-supply() returns expected value",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__read-only functions: aibtc-action-proposal-voting__get-liquid-supply() returns expected value",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__read-only functions: aibtc-action-proposal-voting__get-liquid-supply() returns expected value",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__read-only functions: aibtc-action-proposal-voting__get-liquid-supply() returns expected value",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__read-only functions: aibtc-action-proposal-voting__get-liquid-supply() returns expected value",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__read-only functions: aibtc-action-proposal-voting__get-liquid-supply() returns expected value",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__read-only functions: aibtc-action-proposal-voting__get-liquid-supply() returns expected value",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__read-only functions: aibtc-action-proposal-voting__get-liquid-supply() returns expected value",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__read-only functions: aibtc-action-proposal-voting__get-liquid-supply() returns expected value",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__read-only functions: aibtc-action-proposal-voting__get-liquid-supply() returns expected value",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__read-only functions: aibtc-action-proposal-voting__get-liquid-supply() returns expected value",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__read-only functions: aibtc-action-proposal-voting__get-liquid-supply() returns expected value",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__read-only functions: aibtc-action-proposal-voting__get-liquid-supply() returns expected value",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__read-only functions: aibtc-action-proposal-voting__get-liquid-supply() returns expected value",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__read-only functions: aibtc-action-proposal-voting__get-liquid-supply() returns expected value",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__read-only functions: aibtc-action-proposal-voting__get-liquid-supply() returns expected value",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__read-only functions: aibtc-action-proposal-voting__get-liquid-supply() returns expected value",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__read-only functions: aibtc-action-proposal-voting__get-liquid-supply() returns expected value",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u477683"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__read-only functions: aibtc-action-proposal-voting__get-liquid-supply() returns expected value",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-action-proposal-voting.test.ts__read-only functions: aibtc-action-proposal-voting__get-liquid-supply() returns expected value",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "get-liquid-supply",
    "args": [
      "u78"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 33504,
        "read_count": 14,
        "runtime": 47699
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if caller is not authorized (user or agent)",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if caller is not authorized (user or agent)",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if caller is not authorized (user or agent)",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if caller is not authorized (user or agent)",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if caller is not authorized (user or agent)",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if caller is not authorized (user or agent)",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if caller is not authorized (user or agent)",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if caller is not authorized (user or agent)",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if caller is not authorized (user or agent)",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if caller is not authorized (user or agent)",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if caller is not authorized (user or agent)",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if caller is not authorized (user or agent)",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if caller is not authorized (user or agent)",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if caller is not authorized (user or agent)",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if caller is not authorized (user or agent)",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if caller is not authorized (user or agent)",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if caller is not authorized (user or agent)",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if caller is not authorized (user or agent)",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if caller is not authorized (user or agent)",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if caller is not authorized (user or agent)",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if caller is not authorized (user or agent)",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if caller is not authorized (user or agent)",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if caller is not authorized (user or agent)",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if caller is not authorized (user or agent)",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u619784"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if caller is not authorized (user or agent)",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
      "u1379490216"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 18575,
        "read_count": 9,
        "runtime": 61690
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if caller is not authorized (user or agent)",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u5232196378895321"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 20652,
        "read_count": 8,
        "runtime": 60869
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if caller is not authorized (user or agent)",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "(some \"Test memo\")"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16270,
        "read_count": 3,
        "runtime": 25833
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if proposal contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if proposal contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if proposal contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if proposal contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if proposal contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if proposal contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if proposal contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if proposal contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if proposal contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if proposal contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if proposal contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u553557"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
      "u1379556443"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 18575,
        "read_count": 9,
        "runtime": 61690
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u4842311739115397"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 20652,
        "read_count": 8,
        "runtime": 60869
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "(some \"Test memo\")"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16358,
        "read_count": 4,
        "runtime": 42558
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds when called by owner",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds when called by owner",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds when called by owner",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds when called by owner",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds when called by owner",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds when called by owner",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds when called by owner",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds when called by owner",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds when called by owner",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds when called by owner",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds when called by owner",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u965054"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
      "u1379144946"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 18575,
        "read_count": 9,
        "runtime": 61690
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u6891507378106737"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 20652,
        "read_count": 8,
        "runtime": 60869
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "approve-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "u1"
    ],
    "cost_result": {
      "total": {
        "write_length": 90,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 39652
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 89,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "(some \"Test memo\")"
    ],
    "cost_result": {
      "total": {
        "write_length": 2150,
        "write_count": 15,
        "read_length": 103730,
        "read_count": 88,
        "runtime": 562819
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 3122,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u854873"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
      "u1379255127"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 18575,
        "read_count": 9,
        "runtime": 61690
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u6420428245175728"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 20652,
        "read_count": 8,
        "runtime": 60869
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "approve-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "u1"
    ],
    "cost_result": {
      "total": {
        "write_length": 90,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 39652
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 89,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "set-agent-can-use-proposals",
    "args": [
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 2,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 31259
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "(some \"Test memo\")"
    ],
    "cost_result": {
      "total": {
        "write_length": 2150,
        "write_count": 15,
        "read_length": 103732,
        "read_count": 89,
        "runtime": 564240
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 3122,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u770441"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
      "u1379339559"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 18575,
        "read_count": 9,
        "runtime": 61690
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u6025101831241681"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 20652,
        "read_count": 8,
        "runtime": 60869
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "approve-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "u1"
    ],
    "cost_result": {
      "total": {
        "write_length": 90,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 39652
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 89,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__create-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "(some \"Test memo\")"
    ],
    "cost_result": {
      "total": {
        "write_length": 2150,
        "write_count": 15,
        "read_length": 103730,
        "read_count": 88,
        "runtime": 562819
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 3122,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() fails if caller is not authorized (user or agent)",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "vote-on-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "u1",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16270,
        "read_count": 3,
        "runtime": 19122
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() fails if proposal contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() fails if proposal contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() fails if proposal contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() fails if proposal contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() fails if proposal contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() fails if proposal contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() fails if proposal contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() fails if proposal contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() fails if proposal contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() fails if proposal contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() fails if proposal contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u853378"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
      "u1379256622"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 18575,
        "read_count": 9,
        "runtime": 61690
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u6413701504713344"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 20652,
        "read_count": 8,
        "runtime": 60869
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "approve-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "u1"
    ],
    "cost_result": {
      "total": {
        "write_length": 90,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 39652
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 89,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "(some \"Test memo\")"
    ],
    "cost_result": {
      "total": {
        "write_length": 2150,
        "write_count": 15,
        "read_length": 103730,
        "read_count": 88,
        "runtime": 562819
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 3122,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "revoke-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "u1"
    ],
    "cost_result": {
      "total": {
        "write_length": 90,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 39637
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 89,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "vote-on-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "u1",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16360,
        "read_count": 4,
        "runtime": 35849
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() succeeds when called by owner",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() succeeds when called by owner",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() succeeds when called by owner",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() succeeds when called by owner",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() succeeds when called by owner",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() succeeds when called by owner",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() succeeds when called by owner",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() succeeds when called by owner",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() succeeds when called by owner",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() succeeds when called by owner",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() succeeds when called by owner",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u953709"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
      "u1379156291"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 18575,
        "read_count": 9,
        "runtime": 61690
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u6845152622749338"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 20652,
        "read_count": 8,
        "runtime": 60869
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "approve-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "u1"
    ],
    "cost_result": {
      "total": {
        "write_length": 90,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 39652
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 89,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "(some \"Test memo\")"
    ],
    "cost_result": {
      "total": {
        "write_length": 2150,
        "write_count": 15,
        "read_length": 103730,
        "read_count": 88,
        "runtime": 562819
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 3122,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "vote-on-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "u1",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 327,
        "write_count": 2,
        "read_length": 55184,
        "read_count": 28,
        "runtime": 176199
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 325,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u896261"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
      "u1379213739"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 18575,
        "read_count": 9,
        "runtime": 61690
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u6602987498214568"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 20652,
        "read_count": 8,
        "runtime": 60869
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "approve-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "u1"
    ],
    "cost_result": {
      "total": {
        "write_length": 90,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 39652
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 89,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "(some \"Test memo\")"
    ],
    "cost_result": {
      "total": {
        "write_length": 2150,
        "write_count": 15,
        "read_length": 103730,
        "read_count": 88,
        "runtime": 562819
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 3122,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__vote-on-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "vote-on-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "u1",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 327,
        "write_count": 2,
        "read_length": 55184,
        "read_count": 28,
        "runtime": 176199
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 325,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() fails if caller is not authorized (user or agent)",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "veto-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "u1"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16270,
        "read_count": 3,
        "runtime": 19089
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() fails if proposal contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() fails if proposal contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() fails if proposal contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() fails if proposal contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() fails if proposal contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() fails if proposal contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() fails if proposal contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() fails if proposal contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() fails if proposal contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() fails if proposal contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() fails if proposal contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u519374"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
      "u1379590626"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 18575,
        "read_count": 9,
        "runtime": 61690
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u4629819322143939"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 20652,
        "read_count": 8,
        "runtime": 60869
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "approve-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "u1"
    ],
    "cost_result": {
      "total": {
        "write_length": 90,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 39652
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 89,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "(some \"Test memo\")"
    ],
    "cost_result": {
      "total": {
        "write_length": 2150,
        "write_count": 15,
        "read_length": 103730,
        "read_count": 88,
        "runtime": 562819
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 3122,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "revoke-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "u1"
    ],
    "cost_result": {
      "total": {
        "write_length": 90,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 39637
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 89,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() fails if proposal contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "veto-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "u1"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16360,
        "read_count": 4,
        "runtime": 35816
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds when called by owner",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds when called by owner",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds when called by owner",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds when called by owner",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds when called by owner",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds when called by owner",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds when called by owner",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds when called by owner",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds when called by owner",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds when called by owner",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds when called by owner",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u998701"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
      "u1379111299"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 18575,
        "read_count": 9,
        "runtime": 61690
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u7026267461200946"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 20652,
        "read_count": 8,
        "runtime": 60869
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "approve-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "u1"
    ],
    "cost_result": {
      "total": {
        "write_length": 90,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 39652
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 89,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "(some \"Test memo\")"
    ],
    "cost_result": {
      "total": {
        "write_length": 2150,
        "write_count": 15,
        "read_length": 103730,
        "read_count": 88,
        "runtime": 562819
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 3122,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "veto-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "u1"
    ],
    "cost_result": {
      "total": {
        "write_length": 309,
        "write_count": 2,
        "read_length": 55184,
        "read_count": 28,
        "runtime": 171775
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 307,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u768242"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
      "u1379341758"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 18575,
        "read_count": 9,
        "runtime": 61690
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u6014369322544858"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 20652,
        "read_count": 8,
        "runtime": 60869
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "approve-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "u1"
    ],
    "cost_result": {
      "total": {
        "write_length": 90,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 39652
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 89,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "set-agent-can-use-proposals",
    "args": [
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 2,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 31259
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "(some \"Test memo\")"
    ],
    "cost_result": {
      "total": {
        "write_length": 2150,
        "write_count": 15,
        "read_length": 103730,
        "read_count": 88,
        "runtime": 562819
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 3122,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "veto-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "u1"
    ],
    "cost_result": {
      "total": {
        "write_length": 309,
        "write_count": 2,
        "read_length": 55186,
        "read_count": 29,
        "runtime": 173196
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 307,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u648424"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
      "u1379461576"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 18575,
        "read_count": 9,
        "runtime": 61690
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u5392486486027784"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 20652,
        "read_count": 8,
        "runtime": 60869
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "approve-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "u1"
    ],
    "cost_result": {
      "total": {
        "write_length": 90,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 39652
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 89,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "(some \"Test memo\")"
    ],
    "cost_result": {
      "total": {
        "write_length": 2150,
        "write_count": 15,
        "read_length": 103730,
        "read_count": 88,
        "runtime": 562819
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 3122,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__veto-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "veto-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "u1"
    ],
    "cost_result": {
      "total": {
        "write_length": 309,
        "write_count": 2,
        "read_length": 55184,
        "read_count": 28,
        "runtime": 171775
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 307,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() fails if caller is not authorized (user or agent)",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "conclude-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "u1",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16270,
        "read_count": 3,
        "runtime": 19672
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() fails if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() fails if contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() fails if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() fails if contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() fails if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() fails if contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() fails if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() fails if contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() fails if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() fails if contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() fails if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() fails if contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() fails if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() fails if contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() fails if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() fails if contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() fails if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() fails if contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() fails if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() fails if contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() fails if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() fails if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() fails if contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() fails if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u555711"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() fails if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
      "u1379554289"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 18575,
        "read_count": 9,
        "runtime": 61690
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() fails if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u4855436624490067"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 20652,
        "read_count": 8,
        "runtime": 60869
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() fails if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() fails if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "approve-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "u1"
    ],
    "cost_result": {
      "total": {
        "write_length": 90,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 39652
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 89,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() fails if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "(some \"Test memo\")"
    ],
    "cost_result": {
      "total": {
        "write_length": 2150,
        "write_count": 15,
        "read_length": 103730,
        "read_count": 88,
        "runtime": 562819
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 3122,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() fails if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "vote-on-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "u1",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 327,
        "write_count": 2,
        "read_length": 55184,
        "read_count": 28,
        "runtime": 176199
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 325,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() fails if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "revoke-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "u1"
    ],
    "cost_result": {
      "total": {
        "write_length": 90,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 39637
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 89,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() fails if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "conclude-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "u1",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16360,
        "read_count": 4,
        "runtime": 36399
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u829076"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
      "u1379280924"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 18575,
        "read_count": 9,
        "runtime": 61690
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u6303006795167989"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 20652,
        "read_count": 8,
        "runtime": 60869
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "approve-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "u1"
    ],
    "cost_result": {
      "total": {
        "write_length": 90,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 39652
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 89,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "set-agent-can-use-proposals",
    "args": [
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 2,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 31259
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "(some \"Test memo\")"
    ],
    "cost_result": {
      "total": {
        "write_length": 2150,
        "write_count": 15,
        "read_length": 103730,
        "read_count": 88,
        "runtime": 562819
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 3122,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "vote-on-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "u1",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 327,
        "write_count": 2,
        "read_length": 55184,
        "read_count": 28,
        "runtime": 176199
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 325,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "conclude-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "u1",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message"
    ],
    "cost_result": {
      "total": {
        "write_length": 376,
        "write_count": 8,
        "read_length": 108432,
        "read_count": 83,
        "runtime": 727103
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1026,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds when called by owner",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds when called by owner",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds when called by owner",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds when called by owner",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds when called by owner",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds when called by owner",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds when called by owner",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds when called by owner",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds when called by owner",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds when called by owner",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds when called by owner",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u631232"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
      "u1379478768"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 18575,
        "read_count": 9,
        "runtime": 61690
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u5296845566325308"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 20652,
        "read_count": 8,
        "runtime": 60869
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "approve-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "u1"
    ],
    "cost_result": {
      "total": {
        "write_length": 90,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 39652
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 89,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "(some \"Test memo\")"
    ],
    "cost_result": {
      "total": {
        "write_length": 2150,
        "write_count": 15,
        "read_length": 103730,
        "read_count": 88,
        "runtime": 562819
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 3122,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "vote-on-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "u1",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 327,
        "write_count": 2,
        "read_length": 55184,
        "read_count": 28,
        "runtime": 176199
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 325,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() succeeds when called by owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "conclude-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "u1",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message"
    ],
    "cost_result": {
      "total": {
        "write_length": 376,
        "write_count": 8,
        "read_length": 108430,
        "read_count": 82,
        "runtime": 725682
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1026,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u570901"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
      "u1379539099"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 18575,
        "read_count": 9,
        "runtime": 61690
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u4947119149502925"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 20652,
        "read_count": 8,
        "runtime": 60869
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "approve-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "u1"
    ],
    "cost_result": {
      "total": {
        "write_length": 90,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 39652
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 89,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "(some \"Test memo\")"
    ],
    "cost_result": {
      "total": {
        "write_length": 2150,
        "write_count": 15,
        "read_length": 103730,
        "read_count": 88,
        "runtime": 562819
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 3122,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "vote-on-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "u1",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 327,
        "write_count": 2,
        "read_length": 55184,
        "read_count": 28,
        "runtime": 176199
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 325,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__public functions: aibtc-agent-account__conclude-action-proposal() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "conclude-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "u1",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message"
    ],
    "cost_result": {
      "total": {
        "write_length": 376,
        "write_count": 8,
        "read_length": 108430,
        "read_count": 82,
        "runtime": 725682
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1026,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if not authorized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if not authorized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if not authorized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if not authorized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if not authorized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if not authorized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if not authorized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if not authorized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if not authorized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if not authorized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if not authorized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u519378"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
      "u1379590622"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 18575,
        "read_count": 9,
        "runtime": 61690
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u4629845178286871"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 20652,
        "read_count": 8,
        "runtime": 60869
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "approve-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "u1"
    ],
    "cost_result": {
      "total": {
        "write_length": 90,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 39652
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 89,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "set-agent-can-use-proposals",
    "args": [
      "false"
    ],
    "cost_result": {
      "total": {
        "write_length": 2,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 31259
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "(some \"Test memo\")"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16272,
        "read_count": 4,
        "runtime": 26318
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u990410"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
      "u1379119590"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 18575,
        "read_count": 9,
        "runtime": 61690
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u6993433312227946"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 20652,
        "read_count": 8,
        "runtime": 60869
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "set-agent-can-use-proposals",
    "args": [
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 2,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 31259
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to create proposals if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "(some \"Test memo\")"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16360,
        "read_count": 5,
        "runtime": 43979
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent can use proposals when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent can use proposals when authorized and fails when revoked",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent can use proposals when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent can use proposals when authorized and fails when revoked",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent can use proposals when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent can use proposals when authorized and fails when revoked",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent can use proposals when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent can use proposals when authorized and fails when revoked",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent can use proposals when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent can use proposals when authorized and fails when revoked",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent can use proposals when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent can use proposals when authorized and fails when revoked",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent can use proposals when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent can use proposals when authorized and fails when revoked",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent can use proposals when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent can use proposals when authorized and fails when revoked",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent can use proposals when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent can use proposals when authorized and fails when revoked",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent can use proposals when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent can use proposals when authorized and fails when revoked",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent can use proposals when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent can use proposals when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent can use proposals when authorized and fails when revoked",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent can use proposals when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u983537"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent can use proposals when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
      "u1379126463"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 18575,
        "read_count": 9,
        "runtime": 61690
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent can use proposals when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u6966033641587323"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 20652,
        "read_count": 8,
        "runtime": 60869
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent can use proposals when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent can use proposals when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "approve-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "u1"
    ],
    "cost_result": {
      "total": {
        "write_length": 90,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 39652
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 89,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent can use proposals when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "set-agent-can-use-proposals",
    "args": [
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 2,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 31259
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent can use proposals when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "(some \"Test memo\")"
    ],
    "cost_result": {
      "total": {
        "write_length": 2150,
        "write_count": 15,
        "read_length": 103730,
        "read_count": 88,
        "runtime": 562819
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 3122,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent can use proposals when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "vote-on-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "u1",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 327,
        "write_count": 2,
        "read_length": 55186,
        "read_count": 29,
        "runtime": 177620
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 325,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent can use proposals when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "set-agent-can-use-proposals",
    "args": [
      "false"
    ],
    "cost_result": {
      "total": {
        "write_length": 2,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 31259
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent can use proposals when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "(some \"Test memo 2\")"
    ],
    "cost_result": {
      "total": {
        "write_length": 1944,
        "write_count": 12,
        "read_length": 103726,
        "read_count": 82,
        "runtime": 536019
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2919,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent can use proposals when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "vote-on-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "u2",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16272,
        "read_count": 4,
        "runtime": 19607
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to vote on proposals if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to vote on proposals if contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to vote on proposals if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to vote on proposals if contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to vote on proposals if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to vote on proposals if contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to vote on proposals if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to vote on proposals if contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to vote on proposals if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to vote on proposals if contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to vote on proposals if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to vote on proposals if contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to vote on proposals if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to vote on proposals if contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to vote on proposals if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to vote on proposals if contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to vote on proposals if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to vote on proposals if contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to vote on proposals if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to vote on proposals if contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to vote on proposals if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to vote on proposals if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to vote on proposals if contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to vote on proposals if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u759074"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to vote on proposals if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
      "u1379350926"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 18575,
        "read_count": 9,
        "runtime": 61690
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to vote on proposals if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u5969371475801360"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 20652,
        "read_count": 8,
        "runtime": 60869
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to vote on proposals if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to vote on proposals if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "set-agent-can-use-proposals",
    "args": [
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 2,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 31259
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to vote on proposals if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "approve-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "u1"
    ],
    "cost_result": {
      "total": {
        "write_length": 90,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 39652
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 89,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to vote on proposals if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "(some \"Test memo\")"
    ],
    "cost_result": {
      "total": {
        "write_length": 2150,
        "write_count": 15,
        "read_length": 103730,
        "read_count": 88,
        "runtime": 562819
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 3122,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to vote on proposals if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "revoke-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "u1"
    ],
    "cost_result": {
      "total": {
        "write_length": 90,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 39637
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 89,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to vote on proposals if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "vote-on-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "u1",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16362,
        "read_count": 5,
        "runtime": 37270
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to veto proposals if not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to veto proposals if not authorized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to veto proposals if not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to veto proposals if not authorized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to veto proposals if not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to veto proposals if not authorized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to veto proposals if not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to veto proposals if not authorized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to veto proposals if not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to veto proposals if not authorized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to veto proposals if not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to veto proposals if not authorized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to veto proposals if not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to veto proposals if not authorized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to veto proposals if not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to veto proposals if not authorized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to veto proposals if not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to veto proposals if not authorized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to veto proposals if not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to veto proposals if not authorized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to veto proposals if not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to veto proposals if not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to veto proposals if not authorized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to veto proposals if not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u754383"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to veto proposals if not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
      "u1379355617"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 18575,
        "read_count": 9,
        "runtime": 61690
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to veto proposals if not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u5946192019689378"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 20652,
        "read_count": 8,
        "runtime": 60869
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to veto proposals if not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to veto proposals if not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "approve-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "u1"
    ],
    "cost_result": {
      "total": {
        "write_length": 90,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 39652
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 89,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to veto proposals if not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "set-agent-can-use-proposals",
    "args": [
      "false"
    ],
    "cost_result": {
      "total": {
        "write_length": 2,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 31259
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to veto proposals if not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "(some \"Test memo\")"
    ],
    "cost_result": {
      "total": {
        "write_length": 2150,
        "write_count": 15,
        "read_length": 103730,
        "read_count": 88,
        "runtime": 562819
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 3122,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-proposals.test.ts__read-only functions: aibtc-agent-account__agent fails to veto proposals if not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "veto-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
      "u1"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16272,
        "read_count": 4,
        "runtime": 19574
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if caller is not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if caller is not authorized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if caller is not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if caller is not authorized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if caller is not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if caller is not authorized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if caller is not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if caller is not authorized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if caller is not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if caller is not authorized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if caller is not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if caller is not authorized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if caller is not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if caller is not authorized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if caller is not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if caller is not authorized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if caller is not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if caller is not authorized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if caller is not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if caller is not authorized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if caller is not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if caller is not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if caller is not authorized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if caller is not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u791856"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if caller is not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
      "u1379318144"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 18575,
        "read_count": 9,
        "runtime": 61690
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if caller is not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u6128424264530590"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 20652,
        "read_count": 8,
        "runtime": 60869
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if caller is not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "buy-dao-token",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-acct-swap-faktory-aibtc-sbtc",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u10000000",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16270,
        "read_count": 3,
        "runtime": 19737
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if agent can't buy/sell",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if agent can't buy/sell",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if agent can't buy/sell",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if agent can't buy/sell",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if agent can't buy/sell",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if agent can't buy/sell",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if agent can't buy/sell",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if agent can't buy/sell",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if agent can't buy/sell",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if agent can't buy/sell",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if agent can't buy/sell",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if agent can't buy/sell",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if agent can't buy/sell",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if agent can't buy/sell",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if agent can't buy/sell",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if agent can't buy/sell",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if agent can't buy/sell",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if agent can't buy/sell",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if agent can't buy/sell",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if agent can't buy/sell",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if agent can't buy/sell",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if agent can't buy/sell",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if agent can't buy/sell",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if agent can't buy/sell",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u924304"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if agent can't buy/sell",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
      "u1379185696"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 18575,
        "read_count": 9,
        "runtime": 61690
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if agent can't buy/sell",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u6722779010101966"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 20652,
        "read_count": 8,
        "runtime": 60869
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if agent can't buy/sell",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "buy-dao-token",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-acct-swap-faktory-aibtc-sbtc",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u10000000",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16272,
        "read_count": 4,
        "runtime": 20222
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u679099"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
      "u1379430901"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 18575,
        "read_count": 9,
        "runtime": 61690
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u5558960030654894"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 20652,
        "read_count": 8,
        "runtime": 60869
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "buy-dao-token",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.unknown-adapter",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u10000000",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16345,
        "read_count": 4,
        "runtime": 36591
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if dao token contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if dao token contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if dao token contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if dao token contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if dao token contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if dao token contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if dao token contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if dao token contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if dao token contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if dao token contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if dao token contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if dao token contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if dao token contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if dao token contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if dao token contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if dao token contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if dao token contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if dao token contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if dao token contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if dao token contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if dao token contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if dao token contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if dao token contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if dao token contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u789956"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if dao token contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
      "u1379320044"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 18575,
        "read_count": 9,
        "runtime": 61690
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if dao token contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u6119343509421453"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 20652,
        "read_count": 8,
        "runtime": 60869
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if dao token contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "approve-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-acct-swap-faktory-aibtc-sbtc",
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 96,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 40149
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 95,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() fails if dao token contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "buy-dao-token",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-acct-swap-faktory-aibtc-sbtc",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.unknown-token",
      "u10000000",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16439,
        "read_count": 5,
        "runtime": 54114
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u514420"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
      "u1379595580"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 18575,
        "read_count": 9,
        "runtime": 61690
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u4598349497073197"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 20652,
        "read_count": 8,
        "runtime": 60869
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "approve-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-acct-swap-faktory-aibtc-sbtc",
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 96,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 40149
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 95,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "approve-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u3"
    ],
    "cost_result": {
      "total": {
        "write_length": 75,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 40538
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 74,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "buy-dao-token",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-acct-swap-faktory-aibtc-sbtc",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u1000000",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 76,
        "write_count": 12,
        "read_length": 78270,
        "read_count": 54,
        "runtime": 325335
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1380,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u963398"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
      "u1379146602"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 18575,
        "read_count": 9,
        "runtime": 61690
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u6884773972018991"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 20652,
        "read_count": 8,
        "runtime": 60869
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "approve-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-acct-swap-faktory-aibtc-sbtc",
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 96,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 40149
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 95,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "approve-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u3"
    ],
    "cost_result": {
      "total": {
        "write_length": 75,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 40538
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 74,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__buy-dao-token() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "buy-dao-token",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-acct-swap-faktory-aibtc-sbtc",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u1000000",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 76,
        "write_count": 12,
        "read_length": 78270,
        "read_count": 54,
        "runtime": 325335
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1380,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if caller is not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if caller is not authorized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if caller is not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if caller is not authorized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if caller is not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if caller is not authorized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if caller is not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if caller is not authorized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if caller is not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if caller is not authorized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if caller is not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if caller is not authorized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if caller is not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if caller is not authorized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if caller is not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if caller is not authorized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if caller is not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if caller is not authorized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if caller is not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if caller is not authorized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if caller is not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if caller is not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if caller is not authorized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if caller is not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u709123"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if caller is not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
      "u1379400877"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 18575,
        "read_count": 9,
        "runtime": 61690
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if caller is not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u5716911721229590"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 20652,
        "read_count": 8,
        "runtime": 60869
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if caller is not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "sell-dao-token",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-acct-swap-faktory-aibtc-sbtc",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u10000000",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16270,
        "read_count": 3,
        "runtime": 19737
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if agent can't buy/sell",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if agent can't buy/sell",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if agent can't buy/sell",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if agent can't buy/sell",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if agent can't buy/sell",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if agent can't buy/sell",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if agent can't buy/sell",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if agent can't buy/sell",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if agent can't buy/sell",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if agent can't buy/sell",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if agent can't buy/sell",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if agent can't buy/sell",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if agent can't buy/sell",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if agent can't buy/sell",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if agent can't buy/sell",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if agent can't buy/sell",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if agent can't buy/sell",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if agent can't buy/sell",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if agent can't buy/sell",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if agent can't buy/sell",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if agent can't buy/sell",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if agent can't buy/sell",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if agent can't buy/sell",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if agent can't buy/sell",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u822979"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if agent can't buy/sell",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
      "u1379287021"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 18575,
        "read_count": 9,
        "runtime": 61690
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if agent can't buy/sell",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u6274833213389610"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 20652,
        "read_count": 8,
        "runtime": 60869
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if agent can't buy/sell",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "set-agent-can-buy-sell-assets",
    "args": [
      "false"
    ],
    "cost_result": {
      "total": {
        "write_length": 2,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 31064
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if agent can't buy/sell",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "sell-dao-token",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-acct-swap-faktory-aibtc-sbtc",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u10000000",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16272,
        "read_count": 4,
        "runtime": 20222
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u767402"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
      "u1379342598"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 18575,
        "read_count": 9,
        "runtime": 61690
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u6010259463530954"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 20652,
        "read_count": 8,
        "runtime": 60869
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if swap adapter contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "sell-dao-token",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.unknown-adapter",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u10000000",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16345,
        "read_count": 4,
        "runtime": 36591
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if dao token contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if dao token contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if dao token contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if dao token contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if dao token contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if dao token contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if dao token contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if dao token contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if dao token contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if dao token contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if dao token contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if dao token contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if dao token contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if dao token contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if dao token contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if dao token contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if dao token contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if dao token contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if dao token contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if dao token contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if dao token contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if dao token contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if dao token contract is not approved",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if dao token contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u968080"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if dao token contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
      "u1379141920"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 18575,
        "read_count": 9,
        "runtime": 61690
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if dao token contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u6903794436669716"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 20652,
        "read_count": 8,
        "runtime": 60869
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if dao token contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "approve-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-acct-swap-faktory-aibtc-sbtc",
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 96,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 40149
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 95,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() fails if dao token contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "sell-dao-token",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-acct-swap-faktory-aibtc-sbtc",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.unknown-token",
      "u10000000",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16439,
        "read_count": 5,
        "runtime": 54114
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u672317"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
      "u1379437683"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 18575,
        "read_count": 9,
        "runtime": 61690
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u5522602627416940"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 20652,
        "read_count": 8,
        "runtime": 60869
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "approve-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-acct-swap-faktory-aibtc-sbtc",
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 96,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 40149
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 95,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "approve-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u3"
    ],
    "cost_result": {
      "total": {
        "write_length": 75,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 40538
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 74,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() succeeds when called by owner with approved contract",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "sell-dao-token",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-acct-swap-faktory-aibtc-sbtc",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u5522602627416940",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 76,
        "write_count": 12,
        "read_length": 78268,
        "read_count": 53,
        "runtime": 321738
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1380,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u594675"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
      "u1379515325"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 18575,
        "read_count": 9,
        "runtime": 61690
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u5087627442871002"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 20652,
        "read_count": 8,
        "runtime": 60869
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "approve-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-acct-swap-faktory-aibtc-sbtc",
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 96,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 40149
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 95,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "approve-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u3"
    ],
    "cost_result": {
      "total": {
        "write_length": 75,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 40538
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 74,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__public functions: aibtc-agent-account__sell-dao-token() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "sell-dao-token",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-acct-swap-faktory-aibtc-sbtc",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u5087627442871002",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 76,
        "write_count": 12,
        "read_length": 78268,
        "read_count": 53,
        "runtime": 321738
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1380,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__read-only functions: aibtc-agent-account__agent can buy/sell assets when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__read-only functions: aibtc-agent-account__agent can buy/sell assets when authorized and fails when revoked",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__read-only functions: aibtc-agent-account__agent can buy/sell assets when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__read-only functions: aibtc-agent-account__agent can buy/sell assets when authorized and fails when revoked",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__read-only functions: aibtc-agent-account__agent can buy/sell assets when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__read-only functions: aibtc-agent-account__agent can buy/sell assets when authorized and fails when revoked",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__read-only functions: aibtc-agent-account__agent can buy/sell assets when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__read-only functions: aibtc-agent-account__agent can buy/sell assets when authorized and fails when revoked",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__read-only functions: aibtc-agent-account__agent can buy/sell assets when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__read-only functions: aibtc-agent-account__agent can buy/sell assets when authorized and fails when revoked",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__read-only functions: aibtc-agent-account__agent can buy/sell assets when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__read-only functions: aibtc-agent-account__agent can buy/sell assets when authorized and fails when revoked",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__read-only functions: aibtc-agent-account__agent can buy/sell assets when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__read-only functions: aibtc-agent-account__agent can buy/sell assets when authorized and fails when revoked",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__read-only functions: aibtc-agent-account__agent can buy/sell assets when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__read-only functions: aibtc-agent-account__agent can buy/sell assets when authorized and fails when revoked",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__read-only functions: aibtc-agent-account__agent can buy/sell assets when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__read-only functions: aibtc-agent-account__agent can buy/sell assets when authorized and fails when revoked",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__read-only functions: aibtc-agent-account__agent can buy/sell assets when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__read-only functions: aibtc-agent-account__agent can buy/sell assets when authorized and fails when revoked",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__read-only functions: aibtc-agent-account__agent can buy/sell assets when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__read-only functions: aibtc-agent-account__agent can buy/sell assets when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__read-only functions: aibtc-agent-account__agent can buy/sell assets when authorized and fails when revoked",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__read-only functions: aibtc-agent-account__agent can buy/sell assets when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u893445"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__read-only functions: aibtc-agent-account__agent can buy/sell assets when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
      "u1379216555"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 18575,
        "read_count": 9,
        "runtime": 61690
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__read-only functions: aibtc-agent-account__agent can buy/sell assets when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u6590790171327598"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 20652,
        "read_count": 8,
        "runtime": 60869
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__read-only functions: aibtc-agent-account__agent can buy/sell assets when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "approve-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-acct-swap-faktory-aibtc-sbtc",
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 96,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 40149
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 95,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__read-only functions: aibtc-agent-account__agent can buy/sell assets when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "approve-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u3"
    ],
    "cost_result": {
      "total": {
        "write_length": 75,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 40538
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 74,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__read-only functions: aibtc-agent-account__agent can buy/sell assets when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "set-agent-can-buy-sell-assets",
    "args": [
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 2,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 31064
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__read-only functions: aibtc-agent-account__agent can buy/sell assets when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "buy-dao-token",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-acct-swap-faktory-aibtc-sbtc",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u1000000",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 76,
        "write_count": 12,
        "read_length": 78272,
        "read_count": 55,
        "runtime": 326756
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1380,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__read-only functions: aibtc-agent-account__agent can buy/sell assets when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "set-agent-can-buy-sell-assets",
    "args": [
      "false"
    ],
    "cost_result": {
      "total": {
        "write_length": 2,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 31064
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-buy-sell.test.ts__read-only functions: aibtc-agent-account__agent can buy/sell assets when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "buy-dao-token",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-acct-swap-faktory-aibtc-sbtc",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u1000000",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16272,
        "read_count": 4,
        "runtime": 20222
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__public functions: aibtc-dao-run-cost__set-owner() fails if called by non-owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-owner",
    "args": [
      "u1",
      "ST1SJ3DTE5DN7X54YDH5D64R3BCB6A2AG2ZQ8YPD5",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 14484,
        "read_count": 4,
        "runtime": 17157
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__public functions: aibtc-dao-run-cost__set-owner() succeeds with sufficient confirmations",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-owner",
    "args": [
      "u1",
      "ST2REHHS5J3CERCRBEPMGH7921Q6PYKAADT7JP2VB",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 257,
        "write_count": 4,
        "read_length": 14668,
        "read_count": 14,
        "runtime": 59830
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 253,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__public functions: aibtc-dao-run-cost__set-owner() succeeds with sufficient confirmations",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-owner",
    "args": [
      "u1",
      "ST2REHHS5J3CERCRBEPMGH7921Q6PYKAADT7JP2VB",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 146,
        "write_count": 2,
        "read_length": 14741,
        "read_count": 10,
        "runtime": 59125
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 144,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__public functions: aibtc-dao-run-cost__set-owner() succeeds with sufficient confirmations",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-owner",
    "args": [
      "u1",
      "ST2REHHS5J3CERCRBEPMGH7921Q6PYKAADT7JP2VB",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 281,
        "write_count": 4,
        "read_length": 14840,
        "read_count": 16,
        "runtime": 104906
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 277,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__public functions: aibtc-dao-run-cost__set-owner() succeeds with sufficient confirmations",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "is-owner",
    "args": [
      "ST2REHHS5J3CERCRBEPMGH7921Q6PYKAADT7JP2VB"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 14486,
        "read_count": 4,
        "runtime": 16519
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__public functions: aibtc-dao-run-cost__set-asset() fails if called by non-owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u1",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 14484,
        "read_count": 4,
        "runtime": 17157
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__public functions: aibtc-dao-run-cost__set-asset() succeeds with sufficient confirmations",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u1",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 274,
        "write_count": 4,
        "read_length": 14668,
        "read_count": 14,
        "runtime": 60033
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 270,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__public functions: aibtc-dao-run-cost__set-asset() succeeds with sufficient confirmations",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u1",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 146,
        "write_count": 2,
        "read_length": 14758,
        "read_count": 10,
        "runtime": 59497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 144,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__public functions: aibtc-dao-run-cost__set-asset() succeeds with sufficient confirmations",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u1",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 312,
        "write_count": 4,
        "read_length": 14874,
        "read_count": 16,
        "runtime": 105718
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 308,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__public functions: aibtc-dao-run-cost__set-asset() succeeds with sufficient confirmations",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "is-allowed-asset",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 14500,
        "read_count": 4,
        "runtime": 17179
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__public functions: aibtc-dao-run-cost__transfer-dao-token() fails if called by non-owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u2",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 274,
        "write_count": 4,
        "read_length": 14668,
        "read_count": 14,
        "runtime": 60033
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 270,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__public functions: aibtc-dao-run-cost__transfer-dao-token() fails if called by non-owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u2",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 146,
        "write_count": 2,
        "read_length": 14758,
        "read_count": 10,
        "runtime": 59497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 144,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__public functions: aibtc-dao-run-cost__transfer-dao-token() fails if called by non-owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u2",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 312,
        "write_count": 4,
        "read_length": 14874,
        "read_count": 16,
        "runtime": 105718
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 308,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__public functions: aibtc-dao-run-cost__transfer-dao-token() fails if called by non-owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "transfer-dao-token",
    "args": [
      "u1",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u100",
      "ST1SJ3DTE5DN7X54YDH5D64R3BCB6A2AG2ZQ8YPD5"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 14484,
        "read_count": 4,
        "runtime": 17770
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__public functions: aibtc-dao-run-cost__transfer-dao-token() fails if asset is not allowed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "transfer-dao-token",
    "args": [
      "u1",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.unknown-token",
      "u100",
      "ST1SJ3DTE5DN7X54YDH5D64R3BCB6A2AG2ZQ8YPD5"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 14523,
        "read_count": 5,
        "runtime": 33985
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__public functions: aibtc-dao-run-cost__set-confirmations() fails if called by non-owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-confirmations",
    "args": [
      "u1",
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 14484,
        "read_count": 4,
        "runtime": 16860
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__public functions: aibtc-dao-run-cost__set-confirmations() succeeds with sufficient confirmations",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-confirmations",
    "args": [
      "u3",
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 249,
        "write_count": 4,
        "read_length": 14668,
        "read_count": 14,
        "runtime": 56855
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 245,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__public functions: aibtc-dao-run-cost__set-confirmations() succeeds with sufficient confirmations",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-confirmations",
    "args": [
      "u3",
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 146,
        "write_count": 2,
        "read_length": 14733,
        "read_count": 10,
        "runtime": 53072
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 144,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__public functions: aibtc-dao-run-cost__set-confirmations() succeeds with sufficient confirmations",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-confirmations",
    "args": [
      "u3",
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 266,
        "write_count": 4,
        "read_length": 14824,
        "read_count": 16,
        "runtime": 89108
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 262,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__public functions: aibtc-dao-run-cost__set-confirmations() succeeds with sufficient confirmations",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "get-confirmations-required",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 14479,
        "read_count": 4,
        "runtime": 15046
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__proposal expiration: aibtc-dao-run-cost__proposals cannot be executed after expiration period",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-owner",
    "args": [
      "u100",
      "ST2REHHS5J3CERCRBEPMGH7921Q6PYKAADT7JP2VB",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 257,
        "write_count": 4,
        "read_length": 14668,
        "read_count": 14,
        "runtime": 59830
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 253,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__proposal expiration: aibtc-dao-run-cost__proposals cannot be executed after expiration period",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-owner",
    "args": [
      "u100",
      "ST2REHHS5J3CERCRBEPMGH7921Q6PYKAADT7JP2VB",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 146,
        "write_count": 2,
        "read_length": 14741,
        "read_count": 10,
        "runtime": 59125
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 144,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__proposal expiration: aibtc-dao-run-cost__proposals cannot be executed after expiration period",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-owner",
    "args": [
      "u100",
      "ST2REHHS5J3CERCRBEPMGH7921Q6PYKAADT7JP2VB",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 146,
        "write_count": 2,
        "read_length": 14836,
        "read_count": 12,
        "runtime": 64485
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 144,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__proposal expiration: aibtc-dao-run-cost__proposals cannot be executed after expiration period",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "is-owner",
    "args": [
      "ST2REHHS5J3CERCRBEPMGH7921Q6PYKAADT7JP2VB"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 14484,
        "read_count": 4,
        "runtime": 16517
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__proposal expiration: aibtc-dao-run-cost__confirmations can still be added after expiration but execution fails",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-owner",
    "args": [
      "u101",
      "ST2REHHS5J3CERCRBEPMGH7921Q6PYKAADT7JP2VB",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 257,
        "write_count": 4,
        "read_length": 14668,
        "read_count": 14,
        "runtime": 59830
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 253,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__proposal expiration: aibtc-dao-run-cost__confirmations can still be added after expiration but execution fails",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-owner",
    "args": [
      "u101",
      "ST2REHHS5J3CERCRBEPMGH7921Q6PYKAADT7JP2VB",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 146,
        "write_count": 2,
        "read_length": 14741,
        "read_count": 10,
        "runtime": 59125
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 144,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__proposal expiration: aibtc-dao-run-cost__confirmations can still be added after expiration but execution fails",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "owner-has-confirmed",
    "args": [
      "u1",
      "u101",
      "ST1SJ3DTE5DN7X54YDH5D64R3BCB6A2AG2ZQ8YPD5"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 14540,
        "read_count": 4,
        "runtime": 18689
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__proposal expiration: aibtc-dao-run-cost__confirmations can still be added after expiration but execution fails",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "get-total-confirmations",
    "args": [
      "u1",
      "u101"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 14528,
        "read_count": 4,
        "runtime": 18042
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__edge cases: aibtc-dao-run-cost__cannot execute a proposal that doesn't exist",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-owner",
    "args": [
      "u999",
      "ST2REHHS5J3CERCRBEPMGH7921Q6PYKAADT7JP2VB",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 257,
        "write_count": 4,
        "read_length": 14668,
        "read_count": 14,
        "runtime": 59830
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 253,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__edge cases: aibtc-dao-run-cost__cannot execute an already executed proposal",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-owner",
    "args": [
      "u102",
      "ST2REHHS5J3CERCRBEPMGH7921Q6PYKAADT7JP2VB",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 257,
        "write_count": 4,
        "read_length": 14668,
        "read_count": 14,
        "runtime": 59830
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 253,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__edge cases: aibtc-dao-run-cost__cannot execute an already executed proposal",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-owner",
    "args": [
      "u102",
      "ST2REHHS5J3CERCRBEPMGH7921Q6PYKAADT7JP2VB",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 146,
        "write_count": 2,
        "read_length": 14741,
        "read_count": 10,
        "runtime": 59125
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 144,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__edge cases: aibtc-dao-run-cost__cannot execute an already executed proposal",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-owner",
    "args": [
      "u102",
      "ST2REHHS5J3CERCRBEPMGH7921Q6PYKAADT7JP2VB",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 281,
        "write_count": 4,
        "read_length": 14840,
        "read_count": 16,
        "runtime": 104906
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 277,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__edge cases: aibtc-dao-run-cost__cannot execute an already executed proposal",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-owner",
    "args": [
      "u102",
      "ST2REHHS5J3CERCRBEPMGH7921Q6PYKAADT7JP2VB",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 146,
        "write_count": 2,
        "read_length": 14758,
        "read_count": 10,
        "runtime": 59142
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 144,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__edge cases: aibtc-dao-run-cost__set-owner() fails if confirmation has mismatched parameters",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-owner",
    "args": [
      "u400",
      "ST2REHHS5J3CERCRBEPMGH7921Q6PYKAADT7JP2VB",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 257,
        "write_count": 4,
        "read_length": 14668,
        "read_count": 14,
        "runtime": 59830
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 253,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__edge cases: aibtc-dao-run-cost__set-owner() fails if confirmation has mismatched parameters",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-owner",
    "args": [
      "u400",
      "ST2REHHS5J3CERCRBEPMGH7921Q6PYKAADT7JP2VB",
      "false"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 14579,
        "read_count": 5,
        "runtime": 24449
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__edge cases: aibtc-dao-run-cost__set-asset() fails if confirmation has mismatched parameters",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u401",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 274,
        "write_count": 4,
        "read_length": 14668,
        "read_count": 14,
        "runtime": 60033
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 270,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__edge cases: aibtc-dao-run-cost__set-asset() fails if confirmation has mismatched parameters",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u401",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "false"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 14596,
        "read_count": 5,
        "runtime": 24686
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__edge cases: aibtc-dao-run-cost__transfer-dao-token() fails if confirmation has mismatched parameters",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 274,
        "write_count": 4,
        "read_length": 14668,
        "read_count": 14,
        "runtime": 60033
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 270,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__edge cases: aibtc-dao-run-cost__transfer-dao-token() fails if confirmation has mismatched parameters",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 146,
        "write_count": 2,
        "read_length": 14758,
        "read_count": 10,
        "runtime": 59497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 144,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__edge cases: aibtc-dao-run-cost__transfer-dao-token() fails if confirmation has mismatched parameters",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 312,
        "write_count": 4,
        "read_length": 14874,
        "read_count": 16,
        "runtime": 105718
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 308,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__edge cases: aibtc-dao-run-cost__transfer-dao-token() fails if confirmation has mismatched parameters",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "transfer-dao-token",
    "args": [
      "u402",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u100",
      "ST2JHG361ZXG51QTKY2NQCVBPPRRE2KZB1HR05NNC"
    ],
    "cost_result": {
      "total": {
        "write_length": 311,
        "write_count": 4,
        "read_length": 14707,
        "read_count": 15,
        "runtime": 107361
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 307,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__edge cases: aibtc-dao-run-cost__transfer-dao-token() fails if confirmation has mismatched parameters",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "transfer-dao-token",
    "args": [
      "u402",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u200",
      "ST2JHG361ZXG51QTKY2NQCVBPPRRE2KZB1HR05NNC"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 14672,
        "read_count": 6,
        "runtime": 55594
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__edge cases: aibtc-dao-run-cost__set-confirmations() fails if confirmation has mismatched parameters",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-confirmations",
    "args": [
      "u403",
      "u4"
    ],
    "cost_result": {
      "total": {
        "write_length": 249,
        "write_count": 4,
        "read_length": 14668,
        "read_count": 14,
        "runtime": 56855
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 245,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__edge cases: aibtc-dao-run-cost__set-confirmations() fails if confirmation has mismatched parameters",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-confirmations",
    "args": [
      "u403",
      "u5"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 14571,
        "read_count": 5,
        "runtime": 20875
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__contract initialization: aibtc-dao-run-cost__initial owners are correctly set up",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "is-owner",
    "args": [
      "ST349A3QB5Z4CSTBKAG5ZJFCP5T3ABX1RZXJBQF3W"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 14486,
        "read_count": 4,
        "runtime": 16519
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__contract initialization: aibtc-dao-run-cost__initial owners are correctly set up",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "is-owner",
    "args": [
      "ST31S76S7P99YHZK9TFYNMN6FG4A57KZ556BPRKEV"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 14486,
        "read_count": 4,
        "runtime": 16519
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__contract initialization: aibtc-dao-run-cost__initial owners are correctly set up",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "is-owner",
    "args": [
      "ST3YT0XW92E6T2FE59B2G5N2WNNFSBZ6MZKQS5D18"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 14486,
        "read_count": 4,
        "runtime": 16519
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__contract initialization: aibtc-dao-run-cost__initial owners are correctly set up",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "is-owner",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 14486,
        "read_count": 4,
        "runtime": 16519
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__contract initialization: aibtc-dao-run-cost__initial owners are correctly set up",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "is-owner",
    "args": [
      "ST1SJ3DTE5DN7X54YDH5D64R3BCB6A2AG2ZQ8YPD5"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 14486,
        "read_count": 4,
        "runtime": 16519
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__contract initialization: aibtc-dao-run-cost__initial owners are correctly set up",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "is-owner",
    "args": [
      "ST2CY5V39NHDPWSXMW9QDT3HC3GD6Q6XX4CFRK9AG"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 14486,
        "read_count": 4,
        "runtime": 16519
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__contract initialization: aibtc-dao-run-cost__initial owners are correctly set up",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "is-owner",
    "args": [
      "ST2JHG361ZXG51QTKY2NQCVBPPRRE2KZB1HR05NNC"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 14486,
        "read_count": 4,
        "runtime": 16519
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__contract initialization: aibtc-dao-run-cost__initial owners are correctly set up",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "is-owner",
    "args": [
      "ST2NEB84ASENDXKYGJPQW86YXQCEFEX2ZQPG87ND"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 14486,
        "read_count": 4,
        "runtime": 16519
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__transfer functionality: aibtc-dao-run-cost__transfer-dao-token successfully transfers tokens when confirmed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__transfer functionality: aibtc-dao-run-cost__transfer-dao-token successfully transfers tokens when confirmed",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__transfer functionality: aibtc-dao-run-cost__transfer-dao-token successfully transfers tokens when confirmed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__transfer functionality: aibtc-dao-run-cost__transfer-dao-token successfully transfers tokens when confirmed",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__transfer functionality: aibtc-dao-run-cost__transfer-dao-token successfully transfers tokens when confirmed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__transfer functionality: aibtc-dao-run-cost__transfer-dao-token successfully transfers tokens when confirmed",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__transfer functionality: aibtc-dao-run-cost__transfer-dao-token successfully transfers tokens when confirmed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__transfer functionality: aibtc-dao-run-cost__transfer-dao-token successfully transfers tokens when confirmed",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__transfer functionality: aibtc-dao-run-cost__transfer-dao-token successfully transfers tokens when confirmed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__transfer functionality: aibtc-dao-run-cost__transfer-dao-token successfully transfers tokens when confirmed",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__transfer functionality: aibtc-dao-run-cost__transfer-dao-token successfully transfers tokens when confirmed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__transfer functionality: aibtc-dao-run-cost__transfer-dao-token successfully transfers tokens when confirmed",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__transfer functionality: aibtc-dao-run-cost__transfer-dao-token successfully transfers tokens when confirmed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__transfer functionality: aibtc-dao-run-cost__transfer-dao-token successfully transfers tokens when confirmed",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__transfer functionality: aibtc-dao-run-cost__transfer-dao-token successfully transfers tokens when confirmed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__transfer functionality: aibtc-dao-run-cost__transfer-dao-token successfully transfers tokens when confirmed",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__transfer functionality: aibtc-dao-run-cost__transfer-dao-token successfully transfers tokens when confirmed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__transfer functionality: aibtc-dao-run-cost__transfer-dao-token successfully transfers tokens when confirmed",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__transfer functionality: aibtc-dao-run-cost__transfer-dao-token successfully transfers tokens when confirmed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__transfer functionality: aibtc-dao-run-cost__transfer-dao-token successfully transfers tokens when confirmed",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__transfer functionality: aibtc-dao-run-cost__transfer-dao-token successfully transfers tokens when confirmed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__transfer functionality: aibtc-dao-run-cost__transfer-dao-token successfully transfers tokens when confirmed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__transfer functionality: aibtc-dao-run-cost__transfer-dao-token successfully transfers tokens when confirmed",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__transfer functionality: aibtc-dao-run-cost__transfer-dao-token successfully transfers tokens when confirmed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u1000000"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__transfer functionality: aibtc-dao-run-cost__transfer-dao-token successfully transfers tokens when confirmed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
    "method": "transfer",
    "args": [
      "u1000",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 4382,
        "read_count": 5,
        "runtime": 9748
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__transfer functionality: aibtc-dao-run-cost__transfer-dao-token successfully transfers tokens when confirmed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "transfer-dao-token",
    "args": [
      "u200",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u1000",
      "ST2JHG361ZXG51QTKY2NQCVBPPRRE2KZB1HR05NNC"
    ],
    "cost_result": {
      "total": {
        "write_length": 311,
        "write_count": 4,
        "read_length": 14707,
        "read_count": 15,
        "runtime": 107361
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 307,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__transfer functionality: aibtc-dao-run-cost__transfer-dao-token successfully transfers tokens when confirmed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "transfer-dao-token",
    "args": [
      "u200",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u1000",
      "ST2JHG361ZXG51QTKY2NQCVBPPRRE2KZB1HR05NNC"
    ],
    "cost_result": {
      "total": {
        "write_length": 146,
        "write_count": 2,
        "read_length": 14834,
        "read_count": 11,
        "runtime": 110846
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 144,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__transfer functionality: aibtc-dao-run-cost__transfer-dao-token successfully transfers tokens when confirmed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "transfer-dao-token",
    "args": [
      "u200",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u1000",
      "ST2JHG361ZXG51QTKY2NQCVBPPRRE2KZB1HR05NNC"
    ],
    "cost_result": {
      "total": {
        "write_length": 311,
        "write_count": 5,
        "read_length": 19369,
        "read_count": 21,
        "runtime": 176064
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 635,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__is-owner() returns true for owners",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 274,
        "write_count": 4,
        "read_length": 14668,
        "read_count": 14,
        "runtime": 60033
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 270,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__is-owner() returns true for owners",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 146,
        "write_count": 2,
        "read_length": 14758,
        "read_count": 10,
        "runtime": 59497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 144,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__is-owner() returns true for owners",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 312,
        "write_count": 4,
        "read_length": 14874,
        "read_count": 16,
        "runtime": 105718
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 308,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__is-owner() returns true for owners",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "is-owner",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 14486,
        "read_count": 4,
        "runtime": 16519
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__is-owner() returns false for non-owners",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 274,
        "write_count": 4,
        "read_length": 14668,
        "read_count": 14,
        "runtime": 60033
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 270,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__is-owner() returns false for non-owners",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 146,
        "write_count": 2,
        "read_length": 14758,
        "read_count": 10,
        "runtime": 59497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 144,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__is-owner() returns false for non-owners",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 312,
        "write_count": 4,
        "read_length": 14874,
        "read_count": 16,
        "runtime": 105718
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 308,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__is-owner() returns false for non-owners",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "is-owner",
    "args": [
      "ST2REHHS5J3CERCRBEPMGH7921Q6PYKAADT7JP2VB"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 14484,
        "read_count": 4,
        "runtime": 16517
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-confirmations-required() returns the expected number",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 274,
        "write_count": 4,
        "read_length": 14668,
        "read_count": 14,
        "runtime": 60033
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 270,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-confirmations-required() returns the expected number",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 146,
        "write_count": 2,
        "read_length": 14758,
        "read_count": 10,
        "runtime": 59497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 144,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-confirmations-required() returns the expected number",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 312,
        "write_count": 4,
        "read_length": 14874,
        "read_count": 16,
        "runtime": 105718
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 308,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-confirmations-required() returns the expected number",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "get-confirmations-required",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 14479,
        "read_count": 4,
        "runtime": 15046
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__owner-has-confirmed() returns true when an owner has confirmed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 274,
        "write_count": 4,
        "read_length": 14668,
        "read_count": 14,
        "runtime": 60033
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 270,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__owner-has-confirmed() returns true when an owner has confirmed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 146,
        "write_count": 2,
        "read_length": 14758,
        "read_count": 10,
        "runtime": 59497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 144,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__owner-has-confirmed() returns true when an owner has confirmed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 312,
        "write_count": 4,
        "read_length": 14874,
        "read_count": 16,
        "runtime": 105718
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 308,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__owner-has-confirmed() returns true when an owner has confirmed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-owner",
    "args": [
      "u5",
      "ST2JHG361ZXG51QTKY2NQCVBPPRRE2KZB1HR05NNC",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 257,
        "write_count": 4,
        "read_length": 14668,
        "read_count": 14,
        "runtime": 59830
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 253,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__owner-has-confirmed() returns true when an owner has confirmed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "owner-has-confirmed",
    "args": [
      "u1",
      "u5",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 14540,
        "read_count": 4,
        "runtime": 18689
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__owner-has-confirmed() returns false when an owner has not confirmed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 274,
        "write_count": 4,
        "read_length": 14668,
        "read_count": 14,
        "runtime": 60033
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 270,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__owner-has-confirmed() returns false when an owner has not confirmed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 146,
        "write_count": 2,
        "read_length": 14758,
        "read_count": 10,
        "runtime": 59497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 144,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__owner-has-confirmed() returns false when an owner has not confirmed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 312,
        "write_count": 4,
        "read_length": 14874,
        "read_count": 16,
        "runtime": 105718
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 308,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__owner-has-confirmed() returns false when an owner has not confirmed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "owner-has-confirmed",
    "args": [
      "u1",
      "u6",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 14538,
        "read_count": 4,
        "runtime": 18687
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-total-confirmations() returns the correct number of confirmations",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 274,
        "write_count": 4,
        "read_length": 14668,
        "read_count": 14,
        "runtime": 60033
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 270,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-total-confirmations() returns the correct number of confirmations",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 146,
        "write_count": 2,
        "read_length": 14758,
        "read_count": 10,
        "runtime": 59497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 144,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-total-confirmations() returns the correct number of confirmations",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 312,
        "write_count": 4,
        "read_length": 14874,
        "read_count": 16,
        "runtime": 105718
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 308,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-total-confirmations() returns the correct number of confirmations",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-owner",
    "args": [
      "u7",
      "ST2JHG361ZXG51QTKY2NQCVBPPRRE2KZB1HR05NNC",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 257,
        "write_count": 4,
        "read_length": 14668,
        "read_count": 14,
        "runtime": 59830
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 253,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-total-confirmations() returns the correct number of confirmations",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "get-total-confirmations",
    "args": [
      "u1",
      "u7"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 14528,
        "read_count": 4,
        "runtime": 18042
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__is-allowed-asset() returns true for allowed assets",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 274,
        "write_count": 4,
        "read_length": 14668,
        "read_count": 14,
        "runtime": 60033
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 270,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__is-allowed-asset() returns true for allowed assets",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 146,
        "write_count": 2,
        "read_length": 14758,
        "read_count": 10,
        "runtime": 59497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 144,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__is-allowed-asset() returns true for allowed assets",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 312,
        "write_count": 4,
        "read_length": 14874,
        "read_count": 16,
        "runtime": 105718
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 308,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__is-allowed-asset() returns true for allowed assets",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "is-allowed-asset",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 14500,
        "read_count": 4,
        "runtime": 17179
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__is-allowed-asset() returns false for non-allowed assets",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 274,
        "write_count": 4,
        "read_length": 14668,
        "read_count": 14,
        "runtime": 60033
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 270,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__is-allowed-asset() returns false for non-allowed assets",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 146,
        "write_count": 2,
        "read_length": 14758,
        "read_count": 10,
        "runtime": 59497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 144,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__is-allowed-asset() returns false for non-allowed assets",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 312,
        "write_count": 4,
        "read_length": 14874,
        "read_count": 16,
        "runtime": 105718
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 308,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__is-allowed-asset() returns false for non-allowed assets",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "is-allowed-asset",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.unknown-token"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 14498,
        "read_count": 4,
        "runtime": 17177
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-allowed-asset() returns the correct status for a given asset",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 274,
        "write_count": 4,
        "read_length": 14668,
        "read_count": 14,
        "runtime": 60033
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 270,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-allowed-asset() returns the correct status for a given asset",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 146,
        "write_count": 2,
        "read_length": 14758,
        "read_count": 10,
        "runtime": 59497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 144,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-allowed-asset() returns the correct status for a given asset",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 312,
        "write_count": 4,
        "read_length": 14874,
        "read_count": 16,
        "runtime": 105718
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 308,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-allowed-asset() returns the correct status for a given asset",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "get-allowed-asset",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 14500,
        "read_count": 4,
        "runtime": 16249
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-set-owner-proposal() returns the correct proposal details",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 274,
        "write_count": 4,
        "read_length": 14668,
        "read_count": 14,
        "runtime": 60033
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 270,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-set-owner-proposal() returns the correct proposal details",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 146,
        "write_count": 2,
        "read_length": 14758,
        "read_count": 10,
        "runtime": 59497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 144,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-set-owner-proposal() returns the correct proposal details",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 312,
        "write_count": 4,
        "read_length": 14874,
        "read_count": 16,
        "runtime": 105718
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 308,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-set-owner-proposal() returns the correct proposal details",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-owner",
    "args": [
      "u300",
      "ST2JHG361ZXG51QTKY2NQCVBPPRRE2KZB1HR05NNC",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 257,
        "write_count": 4,
        "read_length": 14668,
        "read_count": 14,
        "runtime": 59830
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 253,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-set-owner-proposal() returns the correct proposal details",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "get-set-owner-proposal",
    "args": [
      "u300"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 14554,
        "read_count": 4,
        "runtime": 15775
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-set-asset-proposal() returns the correct proposal details",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 274,
        "write_count": 4,
        "read_length": 14668,
        "read_count": 14,
        "runtime": 60033
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 270,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-set-asset-proposal() returns the correct proposal details",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 146,
        "write_count": 2,
        "read_length": 14758,
        "read_count": 10,
        "runtime": 59497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 144,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-set-asset-proposal() returns the correct proposal details",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 312,
        "write_count": 4,
        "read_length": 14874,
        "read_count": 16,
        "runtime": 105718
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 308,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-set-asset-proposal() returns the correct proposal details",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u301",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 274,
        "write_count": 4,
        "read_length": 14668,
        "read_count": 14,
        "runtime": 60033
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 270,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-set-asset-proposal() returns the correct proposal details",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "get-set-asset-proposal",
    "args": [
      "u301"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 14571,
        "read_count": 4,
        "runtime": 15792
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-transfer-proposal() returns the correct proposal details",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 274,
        "write_count": 4,
        "read_length": 14668,
        "read_count": 14,
        "runtime": 60033
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 270,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-transfer-proposal() returns the correct proposal details",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 146,
        "write_count": 2,
        "read_length": 14758,
        "read_count": 10,
        "runtime": 59497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 144,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-transfer-proposal() returns the correct proposal details",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 312,
        "write_count": 4,
        "read_length": 14874,
        "read_count": 16,
        "runtime": 105718
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 308,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-transfer-proposal() returns the correct proposal details",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "transfer-dao-token",
    "args": [
      "u302",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u500",
      "ST2JHG361ZXG51QTKY2NQCVBPPRRE2KZB1HR05NNC"
    ],
    "cost_result": {
      "total": {
        "write_length": 311,
        "write_count": 4,
        "read_length": 14707,
        "read_count": 15,
        "runtime": 107361
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 307,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-transfer-proposal() returns the correct proposal details",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "get-transfer-proposal",
    "args": [
      "u302"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 14608,
        "read_count": 4,
        "runtime": 15829
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-set-confirmations-proposal() returns the correct proposal details",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 274,
        "write_count": 4,
        "read_length": 14668,
        "read_count": 14,
        "runtime": 60033
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 270,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-set-confirmations-proposal() returns the correct proposal details",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 146,
        "write_count": 2,
        "read_length": 14758,
        "read_count": 10,
        "runtime": 59497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 144,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-set-confirmations-proposal() returns the correct proposal details",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 312,
        "write_count": 4,
        "read_length": 14874,
        "read_count": 16,
        "runtime": 105718
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 308,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-set-confirmations-proposal() returns the correct proposal details",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-confirmations",
    "args": [
      "u303",
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 249,
        "write_count": 4,
        "read_length": 14668,
        "read_count": 14,
        "runtime": 56855
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 245,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-set-confirmations-proposal() returns the correct proposal details",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "get-set-confirmations-proposal",
    "args": [
      "u303"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 14546,
        "read_count": 4,
        "runtime": 15767
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-owner-confirmations() returns the correct confirmation status",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 274,
        "write_count": 4,
        "read_length": 14668,
        "read_count": 14,
        "runtime": 60033
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 270,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-owner-confirmations() returns the correct confirmation status",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 146,
        "write_count": 2,
        "read_length": 14758,
        "read_count": 10,
        "runtime": 59497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 144,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-owner-confirmations() returns the correct confirmation status",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 312,
        "write_count": 4,
        "read_length": 14874,
        "read_count": 16,
        "runtime": 105718
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 308,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-owner-confirmations() returns the correct confirmation status",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-owner",
    "args": [
      "u304",
      "ST2JHG361ZXG51QTKY2NQCVBPPRRE2KZB1HR05NNC",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 257,
        "write_count": 4,
        "read_length": 14668,
        "read_count": 14,
        "runtime": 59830
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 253,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-owner-confirmations() returns the correct confirmation status",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "get-owner-confirmations",
    "args": [
      "u1",
      "u304"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 14540,
        "read_count": 4,
        "runtime": 17780
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-contract-info() returns the expected contract information",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 274,
        "write_count": 4,
        "read_length": 14668,
        "read_count": 14,
        "runtime": 60033
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 270,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-contract-info() returns the expected contract information",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 146,
        "write_count": 2,
        "read_length": 14758,
        "read_count": 10,
        "runtime": 59497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 144,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-contract-info() returns the expected contract information",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 312,
        "write_count": 4,
        "read_length": 14874,
        "read_count": 16,
        "runtime": 105718
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 308,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-contract-info() returns the expected contract information",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "get-contract-info",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 14461,
        "read_count": 3,
        "runtime": 16833
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-proposal-totals() returns the correct proposal counts",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 274,
        "write_count": 4,
        "read_length": 14668,
        "read_count": 14,
        "runtime": 60033
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 270,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-proposal-totals() returns the correct proposal counts",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 146,
        "write_count": 2,
        "read_length": 14758,
        "read_count": 10,
        "runtime": 59497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 144,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-proposal-totals() returns the correct proposal counts",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u10",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 312,
        "write_count": 4,
        "read_length": 14874,
        "read_count": 16,
        "runtime": 105718
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 308,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-proposal-totals() returns the correct proposal counts",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-owner",
    "args": [
      "u20",
      "ST2JHG361ZXG51QTKY2NQCVBPPRRE2KZB1HR05NNC",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 257,
        "write_count": 4,
        "read_length": 14668,
        "read_count": 14,
        "runtime": 59830
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 253,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-proposal-totals() returns the correct proposal counts",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "set-asset",
    "args": [
      "u21",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 274,
        "write_count": 4,
        "read_length": 14668,
        "read_count": 14,
        "runtime": 60033
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 270,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/core/aibtc-dao-run-cost.test.ts__read-only functions: aibtc-dao-run-cost__get-proposal-totals() returns the correct proposal counts",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-run-cost",
    "method": "get-proposal-totals",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 14533,
        "read_count": 7,
        "runtime": 18521
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__open-market() fails if pre-faktory market is not open",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "is-market-open",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23441,
        "read_count": 4,
        "runtime": 24223
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__open-market() fails if pre-faktory market is not open",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "open-market",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 35134,
        "read_count": 8,
        "runtime": 37696
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__open-market() succeeds when pre-faktory market is open",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__open-market() succeeds when pre-faktory market is open",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__open-market() succeeds when pre-faktory market is open",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__open-market() succeeds when pre-faktory market is open",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__open-market() succeeds when pre-faktory market is open",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__open-market() succeeds when pre-faktory market is open",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__open-market() succeeds when pre-faktory market is open",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__open-market() succeeds when pre-faktory market is open",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__open-market() succeeds when pre-faktory market is open",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__open-market() succeeds when pre-faktory market is open",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__open-market() succeeds when pre-faktory market is open",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__open-market() succeeds when pre-faktory market is open",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__open-market() succeeds when pre-faktory market is open",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__open-market() succeeds when pre-faktory market is open",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__open-market() succeeds when pre-faktory market is open",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__open-market() succeeds when pre-faktory market is open",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__open-market() succeeds when pre-faktory market is open",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__open-market() succeeds when pre-faktory market is open",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__open-market() succeeds when pre-faktory market is open",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__open-market() succeeds when pre-faktory market is open",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__open-market() succeeds when pre-faktory market is open",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__open-market() succeeds when pre-faktory market is open",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__open-market() succeeds when pre-faktory market is open",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "open-market",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 2,
        "write_count": 1,
        "read_length": 35134,
        "read_count": 9,
        "runtime": 38550
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__open-market() succeeds when pre-faktory market is open",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "get-open",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 11693,
        "read_count": 4,
        "runtime": 12475
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with non-positive sBTC amount",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with non-positive sBTC amount",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with non-positive sBTC amount",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with non-positive sBTC amount",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with non-positive sBTC amount",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with non-positive sBTC amount",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with non-positive sBTC amount",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with non-positive sBTC amount",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with non-positive sBTC amount",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with non-positive sBTC amount",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with non-positive sBTC amount",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with non-positive sBTC amount",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with non-positive sBTC amount",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with non-positive sBTC amount",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with non-positive sBTC amount",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with non-positive sBTC amount",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with non-positive sBTC amount",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with non-positive sBTC amount",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with non-positive sBTC amount",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with non-positive sBTC amount",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with non-positive sBTC amount",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with non-positive sBTC amount",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with non-positive sBTC amount",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with non-positive sBTC amount",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u0"
    ],
    "cost_result": {
      "total": {
        "write_length": 2,
        "write_count": 1,
        "read_length": 35138,
        "read_count": 11,
        "runtime": 55898
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with unauthorized token",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with unauthorized token",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with unauthorized token",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with unauthorized token",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with unauthorized token",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with unauthorized token",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with unauthorized token",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with unauthorized token",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with unauthorized token",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with unauthorized token",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with unauthorized token",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with unauthorized token",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with unauthorized token",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with unauthorized token",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with unauthorized token",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with unauthorized token",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with unauthorized token",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with unauthorized token",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with unauthorized token",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with unauthorized token",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with unauthorized token",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with unauthorized token",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with unauthorized token",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() fails with unauthorized token",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
      "u100000"
    ],
    "cost_result": {
      "total": {
        "write_length": 2,
        "write_count": 1,
        "read_length": 35136,
        "read_count": 10,
        "runtime": 54814
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() succeeds with valid parameters, opening the market automatically",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() succeeds with valid parameters, opening the market automatically",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() succeeds with valid parameters, opening the market automatically",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() succeeds with valid parameters, opening the market automatically",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() succeeds with valid parameters, opening the market automatically",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() succeeds with valid parameters, opening the market automatically",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() succeeds with valid parameters, opening the market automatically",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() succeeds with valid parameters, opening the market automatically",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() succeeds with valid parameters, opening the market automatically",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() succeeds with valid parameters, opening the market automatically",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() succeeds with valid parameters, opening the market automatically",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() succeeds with valid parameters, opening the market automatically",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() succeeds with valid parameters, opening the market automatically",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() succeeds with valid parameters, opening the market automatically",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() succeeds with valid parameters, opening the market automatically",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() succeeds with valid parameters, opening the market automatically",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() succeeds with valid parameters, opening the market automatically",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() succeeds with valid parameters, opening the market automatically",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() succeeds with valid parameters, opening the market automatically",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() succeeds with valid parameters, opening the market automatically",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() succeeds with valid parameters, opening the market automatically",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() succeeds with valid parameters, opening the market automatically",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() succeeds with valid parameters, opening the market automatically",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() succeeds with valid parameters, opening the market automatically",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
    "method": "get-balance",
    "args": [
      "ST1SJ3DTE5DN7X54YDH5D64R3BCB6A2AG2ZQ8YPD5"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 4382,
        "read_count": 4,
        "runtime": 5800
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() succeeds with valid parameters, opening the market automatically",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u100000"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__buy() succeeds with valid parameters, opening the market automatically",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
    "method": "get-balance",
    "args": [
      "ST1SJ3DTE5DN7X54YDH5D64R3BCB6A2AG2ZQ8YPD5"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 4382,
        "read_count": 4,
        "runtime": 5800
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with non-positive token amount",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with non-positive token amount",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with non-positive token amount",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with non-positive token amount",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with non-positive token amount",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with non-positive token amount",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with non-positive token amount",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with non-positive token amount",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with non-positive token amount",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with non-positive token amount",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with non-positive token amount",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with non-positive token amount",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with non-positive token amount",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with non-positive token amount",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with non-positive token amount",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with non-positive token amount",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with non-positive token amount",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with non-positive token amount",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with non-positive token amount",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with non-positive token amount",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with non-positive token amount",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with non-positive token amount",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with non-positive token amount",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with non-positive token amount",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u100000"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with non-positive token amount",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "sell",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u0"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 11693,
        "read_count": 4,
        "runtime": 28065
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with unauthorized token",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with unauthorized token",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with unauthorized token",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with unauthorized token",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with unauthorized token",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with unauthorized token",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with unauthorized token",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with unauthorized token",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with unauthorized token",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with unauthorized token",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with unauthorized token",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with unauthorized token",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with unauthorized token",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with unauthorized token",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with unauthorized token",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with unauthorized token",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with unauthorized token",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with unauthorized token",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with unauthorized token",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with unauthorized token",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with unauthorized token",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with unauthorized token",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with unauthorized token",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with unauthorized token",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u100000"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() fails with unauthorized token",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "sell",
    "args": [
      "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
      "u1000"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 11691,
        "read_count": 3,
        "runtime": 26981
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() succeeds with valid parameters",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() succeeds with valid parameters",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() succeeds with valid parameters",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() succeeds with valid parameters",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() succeeds with valid parameters",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() succeeds with valid parameters",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() succeeds with valid parameters",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() succeeds with valid parameters",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() succeeds with valid parameters",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() succeeds with valid parameters",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() succeeds with valid parameters",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() succeeds with valid parameters",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() succeeds with valid parameters",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() succeeds with valid parameters",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() succeeds with valid parameters",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() succeeds with valid parameters",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() succeeds with valid parameters",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() succeeds with valid parameters",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() succeeds with valid parameters",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() succeeds with valid parameters",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() succeeds with valid parameters",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() succeeds with valid parameters",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() succeeds with valid parameters",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() succeeds with valid parameters",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u100000"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__public functions: aibtc-faktory-dex__sell() succeeds with valid parameters",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "sell",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u100000000000000"
    ],
    "cost_result": {
      "total": {
        "write_length": 58,
        "write_count": 11,
        "read_length": 46501,
        "read_count": 37,
        "runtime": 172748
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1363,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__read-only functions: aibtc-faktory-dex__get-open() returns a valid response",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "get-open",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 11693,
        "read_count": 4,
        "runtime": 12475
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__read-only functions: aibtc-faktory-dex__get-in() returns expected values for token purchase",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "get-in",
    "args": [
      "u100000"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 11745,
        "read_count": 6,
        "runtime": 21321
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory-dex.test.ts__read-only functions: aibtc-faktory-dex__get-out() returns a valid response for a token sale",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "get-out",
    "args": [
      "u100000000000000"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 11745,
        "read_count": 6,
        "runtime": 21321
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u10000"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-acct-swap-bitflow-aibtc-sbtc",
    "method": "buy-dao-token",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
      "u1000",
      "(some u1)"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 3228,
        "read_count": 3,
        "runtime": 19228
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if minReceive is not provided",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if minReceive is not provided",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if minReceive is not provided",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if minReceive is not provided",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if minReceive is not provided",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if minReceive is not provided",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if minReceive is not provided",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if minReceive is not provided",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if minReceive is not provided",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if minReceive is not provided",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if minReceive is not provided",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if minReceive is not provided",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if minReceive is not provided",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if minReceive is not provided",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if minReceive is not provided",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if minReceive is not provided",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if minReceive is not provided",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if minReceive is not provided",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if minReceive is not provided",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if minReceive is not provided",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if minReceive is not provided",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if minReceive is not provided",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if minReceive is not provided",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if minReceive is not provided",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u10000"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() fails if minReceive is not provided",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-acct-swap-bitflow-aibtc-sbtc",
    "method": "buy-dao-token",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u1000",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 3228,
        "read_count": 3,
        "runtime": 19562
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.xyk-core-v-1-2",
    "method": "set-public-pool-creation",
    "args": [
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 2,
        "write_count": 1,
        "read_length": 37081,
        "read_count": 5,
        "runtime": 49372
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "get-in",
    "args": [
      "u0"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 11745,
        "read_count": 6,
        "runtime": 21053
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "get-open",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 11693,
        "read_count": 4,
        "runtime": 12475
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u4892500"
    ],
    "cost_result": {
      "total": {
        "write_length": 594,
        "write_count": 48,
        "read_length": 233468,
        "read_count": 161,
        "runtime": 631330
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 3837,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "get-open",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 11693,
        "read_count": 4,
        "runtime": 12475
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-acct-swap-bitflow-aibtc-sbtc",
    "method": "buy-dao-token",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u10000",
      "(some u1)"
    ],
    "cost_result": {
      "total": {
        "write_length": 57,
        "write_count": 9,
        "read_length": 81428,
        "read_count": 54,
        "runtime": 335619
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1035,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u10000"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-acct-swap-bitflow-aibtc-sbtc",
    "method": "sell-dao-token",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
      "u1000",
      "(some u1)"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 3228,
        "read_count": 3,
        "runtime": 19228
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if minReceive is not provided",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if minReceive is not provided",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if minReceive is not provided",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if minReceive is not provided",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if minReceive is not provided",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if minReceive is not provided",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if minReceive is not provided",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if minReceive is not provided",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if minReceive is not provided",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if minReceive is not provided",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if minReceive is not provided",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if minReceive is not provided",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if minReceive is not provided",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if minReceive is not provided",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if minReceive is not provided",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if minReceive is not provided",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if minReceive is not provided",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if minReceive is not provided",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if minReceive is not provided",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if minReceive is not provided",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if minReceive is not provided",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if minReceive is not provided",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if minReceive is not provided",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if minReceive is not provided",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u10000"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() fails if minReceive is not provided",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-acct-swap-bitflow-aibtc-sbtc",
    "method": "sell-dao-token",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u1000",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 3228,
        "read_count": 3,
        "runtime": 19562
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u10000"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.xyk-core-v-1-2",
    "method": "set-public-pool-creation",
    "args": [
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 2,
        "write_count": 1,
        "read_length": 37081,
        "read_count": 5,
        "runtime": 49372
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "get-in",
    "args": [
      "u0"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 11745,
        "read_count": 6,
        "runtime": 21053
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "get-open",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 11693,
        "read_count": 4,
        "runtime": 12475
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u4882406"
    ],
    "cost_result": {
      "total": {
        "write_length": 592,
        "write_count": 47,
        "read_length": 210025,
        "read_count": 155,
        "runtime": 604278
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 3836,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "get-open",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 11693,
        "read_count": 4,
        "runtime": 12475
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-bitflow-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-acct-swap-bitflow-aibtc-sbtc",
    "method": "sell-dao-token",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u12691238631509534",
      "(some u1)"
    ],
    "cost_result": {
      "total": {
        "write_length": 57,
        "write_count": 9,
        "read_length": 83505,
        "read_count": 53,
        "runtime": 334896
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1035,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__read-only functions: aibtc-acct-swap-bitflow-aibtc-sbtc__get-contract-info() returns correct contract info",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-acct-swap-bitflow-aibtc-sbtc",
    "method": "get-contract-info",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 3228,
        "read_count": 3,
        "runtime": 5988
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-bitflow-aibtc-sbtc.test.ts__read-only functions: aibtc-acct-swap-bitflow-aibtc-sbtc__get-swap-info() returns correct swap info",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-acct-swap-bitflow-aibtc-sbtc",
    "method": "get-swap-info",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 3300,
        "read_count": 7,
        "runtime": 7401
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u10000"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-acct-swap-faktory-aibtc-sbtc",
    "method": "buy-dao-token",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
      "u1000",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 15308,
        "read_count": 9,
        "runtime": 44295
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if minReceive is provided and slippage is too high",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if minReceive is provided and slippage is too high",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if minReceive is provided and slippage is too high",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if minReceive is provided and slippage is too high",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if minReceive is provided and slippage is too high",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if minReceive is provided and slippage is too high",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if minReceive is provided and slippage is too high",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if minReceive is provided and slippage is too high",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if minReceive is provided and slippage is too high",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if minReceive is provided and slippage is too high",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if minReceive is provided and slippage is too high",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if minReceive is provided and slippage is too high",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if minReceive is provided and slippage is too high",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if minReceive is provided and slippage is too high",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if minReceive is provided and slippage is too high",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if minReceive is provided and slippage is too high",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if minReceive is provided and slippage is too high",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if minReceive is provided and slippage is too high",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if minReceive is provided and slippage is too high",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if minReceive is provided and slippage is too high",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if minReceive is provided and slippage is too high",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if minReceive is provided and slippage is too high",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if minReceive is provided and slippage is too high",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if minReceive is provided and slippage is too high",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u10000"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() fails if minReceive is provided and slippage is too high",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-acct-swap-faktory-aibtc-sbtc",
    "method": "buy-dao-token",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u1000",
      "(some u1000000000000000000)"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 15308,
        "read_count": 9,
        "runtime": 45397
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u10000"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-acct-swap-faktory-aibtc-sbtc",
    "method": "buy-dao-token",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u100000",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 76,
        "write_count": 12,
        "read_length": 61829,
        "read_count": 49,
        "runtime": 223341
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1380,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u10000"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__buy-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-acct-swap-faktory-aibtc-sbtc",
    "method": "buy-dao-token",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u100000",
      "(some u1)"
    ],
    "cost_result": {
      "total": {
        "write_length": 76,
        "write_count": 12,
        "read_length": 61829,
        "read_count": 49,
        "runtime": 224111
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1380,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u10000"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() fails if token contract does not match",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-acct-swap-faktory-aibtc-sbtc",
    "method": "sell-dao-token",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
      "u1000",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 15308,
        "read_count": 9,
        "runtime": 43647
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u10000"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender without minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-acct-swap-faktory-aibtc-sbtc",
    "method": "sell-dao-token",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u124464200666773",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 76,
        "write_count": 12,
        "read_length": 61827,
        "read_count": 48,
        "runtime": 220009
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1380,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u10000"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__public functions: aibtc-acct-swap-faktory-aibtc-sbtc__sell-dao-token() succeeds and swaps for tx-sender with minReceive",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-acct-swap-faktory-aibtc-sbtc",
    "method": "sell-dao-token",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u124464200666773",
      "(some u1)"
    ],
    "cost_result": {
      "total": {
        "write_length": 76,
        "write_count": 12,
        "read_length": 61827,
        "read_count": 48,
        "runtime": 220779
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1380,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__read-only functions: aibtc-acct-swap-faktory-aibtc-sbtc__get-contract-info() returns correct contract info",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-acct-swap-faktory-aibtc-sbtc",
    "method": "get-contract-info",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 3563,
        "read_count": 3,
        "runtime": 6303
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/trading/aibtc-acct-swap-faktory-aibtc-sbtc.test.ts__read-only functions: aibtc-acct-swap-faktory-aibtc-sbtc__get-swap-info() returns correct swap info",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-acct-swap-faktory-aibtc-sbtc",
    "method": "get-swap-info",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 3635,
        "read_count": 7,
        "runtime": 7736
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__buy-up-to() succeeds with valid parameters",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__buy-up-to() succeeds with valid parameters",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__buy-up-to() succeeds with valid parameters",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-user-info",
    "args": [
      "ST1SJ3DTE5DN7X54YDH5D64R3BCB6A2AG2ZQ8YPD5"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23521,
        "read_count": 6,
        "runtime": 31049
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__buy-up-to() fails with invalid seat count (0)",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__buy-up-to() fails with invalid seat count (0)",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u0"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23552,
        "read_count": 9,
        "runtime": 34076
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__buy-up-to() updates total users and seats taken",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__buy-up-to() updates total users and seats taken",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__buy-up-to() updates total users and seats taken",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u3"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__buy-up-to() updates total users and seats taken",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23597,
        "read_count": 12,
        "runtime": 30661
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__refund() succeeds for seat owner before distribution starts",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__refund() succeeds for seat owner before distribution starts",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__refund() succeeds for seat owner before distribution starts",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-user-info",
    "args": [
      "ST2NEB84ASENDXKYGJPQW86YXQCEFEX2ZQPG87ND"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23521,
        "read_count": 6,
        "runtime": 31049
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__refund() succeeds for seat owner before distribution starts",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "refund",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 85,
        "write_count": 7,
        "read_length": 25979,
        "read_count": 24,
        "runtime": 129678
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 407,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__refund() succeeds for seat owner before distribution starts",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-user-info",
    "args": [
      "ST2NEB84ASENDXKYGJPQW86YXQCEFEX2ZQPG87ND"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23504,
        "read_count": 6,
        "runtime": 31032
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__refund() fails for non-seat owner",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__refund() fails for non-seat owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "refund",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23480,
        "read_count": 5,
        "runtime": 26820
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim() fails if distribution not initialized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim() fails if distribution not initialized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim() fails if distribution not initialized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "claim",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23475,
        "read_count": 5,
        "runtime": 26928
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim() succeeds after distribution is initialized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim() succeeds after distribution is initialized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim() succeeds after distribution is initialized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim() succeeds after distribution is initialized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim() succeeds after distribution is initialized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim() succeeds after distribution is initialized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim() succeeds after distribution is initialized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim() succeeds after distribution is initialized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim() succeeds after distribution is initialized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim() succeeds after distribution is initialized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim() succeeds after distribution is initialized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim() succeeds after distribution is initialized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim() succeeds after distribution is initialized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim() succeeds after distribution is initialized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim() succeeds after distribution is initialized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim() succeeds after distribution is initialized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim() succeeds after distribution is initialized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim() succeeds after distribution is initialized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim() succeeds after distribution is initialized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim() succeeds after distribution is initialized",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim() succeeds after distribution is initialized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim() succeeds after distribution is initialized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim() succeeds after distribution is initialized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "claim",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 4,
        "read_length": 28540,
        "read_count": 82,
        "runtime": 186430
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 385,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim() succeeds after distribution is initialized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-user-info",
    "args": [
      "ST1SJ3DTE5DN7X54YDH5D64R3BCB6A2AG2ZQ8YPD5"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24081,
        "read_count": 70,
        "runtime": 146571
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim-on-behalf() succeeds for valid holder",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim-on-behalf() succeeds for valid holder",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim-on-behalf() succeeds for valid holder",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim-on-behalf() succeeds for valid holder",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim-on-behalf() succeeds for valid holder",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim-on-behalf() succeeds for valid holder",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim-on-behalf() succeeds for valid holder",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim-on-behalf() succeeds for valid holder",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim-on-behalf() succeeds for valid holder",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim-on-behalf() succeeds for valid holder",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim-on-behalf() succeeds for valid holder",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim-on-behalf() succeeds for valid holder",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim-on-behalf() succeeds for valid holder",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim-on-behalf() succeeds for valid holder",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim-on-behalf() succeeds for valid holder",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim-on-behalf() succeeds for valid holder",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim-on-behalf() succeeds for valid holder",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim-on-behalf() succeeds for valid holder",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim-on-behalf() succeeds for valid holder",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim-on-behalf() succeeds for valid holder",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim-on-behalf() succeeds for valid holder",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim-on-behalf() succeeds for valid holder",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim-on-behalf() succeeds for valid holder",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "claim-on-behalf",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "ST2CY5V39NHDPWSXMW9QDT3HC3GD6Q6XX4CFRK9AG"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 4,
        "read_length": 28540,
        "read_count": 82,
        "runtime": 188438
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 385,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__claim-on-behalf() succeeds for valid holder",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-user-info",
    "args": [
      "ST2CY5V39NHDPWSXMW9QDT3HC3GD6Q6XX4CFRK9AG"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24081,
        "read_count": 70,
        "runtime": 146571
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__trigger-fee-airdrop() fails with no fees to distribute",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__trigger-fee-airdrop() fails with no fees to distribute",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__trigger-fee-airdrop() fails with no fees to distribute",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__trigger-fee-airdrop() fails with no fees to distribute",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__trigger-fee-airdrop() fails with no fees to distribute",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__trigger-fee-airdrop() fails with no fees to distribute",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__trigger-fee-airdrop() fails with no fees to distribute",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__trigger-fee-airdrop() fails with no fees to distribute",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__trigger-fee-airdrop() fails with no fees to distribute",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__trigger-fee-airdrop() fails with no fees to distribute",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__trigger-fee-airdrop() fails with no fees to distribute",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__trigger-fee-airdrop() fails with no fees to distribute",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__trigger-fee-airdrop() fails with no fees to distribute",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__trigger-fee-airdrop() fails with no fees to distribute",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__trigger-fee-airdrop() fails with no fees to distribute",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__trigger-fee-airdrop() fails with no fees to distribute",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__trigger-fee-airdrop() fails with no fees to distribute",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__trigger-fee-airdrop() fails with no fees to distribute",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__trigger-fee-airdrop() fails with no fees to distribute",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__trigger-fee-airdrop() fails with no fees to distribute",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__trigger-fee-airdrop() fails with no fees to distribute",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__trigger-fee-airdrop() fails with no fees to distribute",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__public functions: aibtc-pre-faktory__trigger-fee-airdrop() fails with no fees to distribute",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "trigger-fee-airdrop",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23534,
        "read_count": 10,
        "runtime": 30286
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__read-only functions: aibtc-pre-faktory__get-contract-status() returns valid data",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__read-only functions: aibtc-pre-faktory__get-user-info() returns valid data for seat owner",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__read-only functions: aibtc-pre-faktory__get-user-info() returns valid data for seat owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u1"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__read-only functions: aibtc-pre-faktory__get-user-info() returns valid data for seat owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-user-info",
    "args": [
      "ST1SJ3DTE5DN7X54YDH5D64R3BCB6A2AG2ZQ8YPD5"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23521,
        "read_count": 6,
        "runtime": 31049
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__read-only functions: aibtc-pre-faktory__get-remaining-seats() returns valid data",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-remaining-seats",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23457,
        "read_count": 4,
        "runtime": 26328
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__read-only functions: aibtc-pre-faktory__get-seats-owned() returns valid data",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__read-only functions: aibtc-pre-faktory__get-seats-owned() returns valid data",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u1"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__read-only functions: aibtc-pre-faktory__get-seats-owned() returns valid data",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-seats-owned",
    "args": [
      "ST1SJ3DTE5DN7X54YDH5D64R3BCB6A2AG2ZQ8YPD5"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23480,
        "read_count": 4,
        "runtime": 27620
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__read-only functions: aibtc-pre-faktory__get-claimed-amount() returns valid data",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-claimed-amount",
    "args": [
      "ST1SJ3DTE5DN7X54YDH5D64R3BCB6A2AG2ZQ8YPD5"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23462,
        "read_count": 4,
        "runtime": 27602
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__read-only functions: aibtc-pre-faktory__get-vesting-schedule() returns valid data",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-vesting-schedule",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23439,
        "read_count": 3,
        "runtime": 29596
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__read-only functions: aibtc-pre-faktory__get-seat-holders() returns valid data",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-seat-holders",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23445,
        "read_count": 4,
        "runtime": 26119
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__read-only functions: aibtc-pre-faktory__is-market-open() returns valid data",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "is-market-open",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23441,
        "read_count": 4,
        "runtime": 24223
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__read-only functions: aibtc-pre-faktory__is-governance-active() returns valid data",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "is-governance-active",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23441,
        "read_count": 4,
        "runtime": 24223
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__read-only functions: aibtc-pre-faktory__get-fee-distribution-info() returns valid data",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-fee-distribution-info",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23521,
        "read_count": 11,
        "runtime": 31678
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__read-only functions: aibtc-pre-faktory__get-all-seat-holders() returns valid data",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-all-seat-holders",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23445,
        "read_count": 4,
        "runtime": 24227
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__read-only functions: aibtc-pre-faktory__get-user-expected-share() returns valid data",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__read-only functions: aibtc-pre-faktory__get-user-expected-share() returns valid data",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u1"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-pre-faktory.test.ts__read-only functions: aibtc-pre-faktory__get-user-expected-share() returns valid data",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-user-expected-share",
    "args": [
      "ST1SJ3DTE5DN7X54YDH5D64R3BCB6A2AG2ZQ8YPD5"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23516,
        "read_count": 6,
        "runtime": 30874
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__callback() should respond with (ok true)",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-users",
    "method": "callback",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM",
      "0x74657374"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 4564,
        "read_count": 3,
        "runtime": 5297
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__get-or-create-user-index() fails if called directly",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-users",
    "method": "get-or-create-user-index",
    "args": [
      "ST1SJ3DTE5DN7X54YDH5D64R3BCB6A2AG2ZQ8YPD5"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 9132,
        "read_count": 7,
        "runtime": 12937
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__get-or-create-user-index() creates a user when a proposal is made",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__get-or-create-user-index() creates a user when a proposal is made",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__get-or-create-user-index() creates a user when a proposal is made",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__get-or-create-user-index() creates a user when a proposal is made",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__get-or-create-user-index() creates a user when a proposal is made",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__get-or-create-user-index() creates a user when a proposal is made",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__get-or-create-user-index() creates a user when a proposal is made",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__get-or-create-user-index() creates a user when a proposal is made",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__get-or-create-user-index() creates a user when a proposal is made",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__get-or-create-user-index() creates a user when a proposal is made",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__get-or-create-user-index() creates a user when a proposal is made",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__get-or-create-user-index() creates a user when a proposal is made",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__get-or-create-user-index() creates a user when a proposal is made",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__get-or-create-user-index() creates a user when a proposal is made",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__get-or-create-user-index() creates a user when a proposal is made",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__get-or-create-user-index() creates a user when a proposal is made",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__get-or-create-user-index() creates a user when a proposal is made",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__get-or-create-user-index() creates a user when a proposal is made",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__get-or-create-user-index() creates a user when a proposal is made",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__get-or-create-user-index() creates a user when a proposal is made",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__get-or-create-user-index() creates a user when a proposal is made",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__get-or-create-user-index() creates a user when a proposal is made",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__get-or-create-user-index() creates a user when a proposal is made",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__get-or-create-user-index() creates a user when a proposal is made",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__get-or-create-user-index() creates a user when a proposal is made",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__get-or-create-user-index() creates a user when a proposal is made",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u854046"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__get-or-create-user-index() creates a user when a proposal is made",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-users",
    "method": "get-user-index",
    "args": [
      "ST1SJ3DTE5DN7X54YDH5D64R3BCB6A2AG2ZQ8YPD5"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 4587,
        "read_count": 4,
        "runtime": 6336
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__get-or-create-user-index() creates a user when a proposal is made",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 2056,
        "write_count": 15,
        "read_length": 87350,
        "read_count": 84,
        "runtime": 450062
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 3028,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__get-or-create-user-index() creates a user when a proposal is made",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-users",
    "method": "get-user-index",
    "args": [
      "ST1SJ3DTE5DN7X54YDH5D64R3BCB6A2AG2ZQ8YPD5"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 4605,
        "read_count": 4,
        "runtime": 6354
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__get-or-create-user-index() creates a user when a proposal is made",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-users",
    "method": "get-user-data-by-address",
    "args": [
      "ST1SJ3DTE5DN7X54YDH5D64R3BCB6A2AG2ZQ8YPD5"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 4714,
        "read_count": 5,
        "runtime": 8557
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__increase-user-reputation() fails if called directly",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-users",
    "method": "increase-user-reputation",
    "args": [
      "ST1SJ3DTE5DN7X54YDH5D64R3BCB6A2AG2ZQ8YPD5",
      "u5"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 4587,
        "read_count": 4,
        "runtime": 7918
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__increase-user-reputation() is called when a proposal passes",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__increase-user-reputation() is called when a proposal passes",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__increase-user-reputation() is called when a proposal passes",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__increase-user-reputation() is called when a proposal passes",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__increase-user-reputation() is called when a proposal passes",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__increase-user-reputation() is called when a proposal passes",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__increase-user-reputation() is called when a proposal passes",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__increase-user-reputation() is called when a proposal passes",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__increase-user-reputation() is called when a proposal passes",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__increase-user-reputation() is called when a proposal passes",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__increase-user-reputation() is called when a proposal passes",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__increase-user-reputation() is called when a proposal passes",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__increase-user-reputation() is called when a proposal passes",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__increase-user-reputation() is called when a proposal passes",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__increase-user-reputation() is called when a proposal passes",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__increase-user-reputation() is called when a proposal passes",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__increase-user-reputation() is called when a proposal passes",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__increase-user-reputation() is called when a proposal passes",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__increase-user-reputation() is called when a proposal passes",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__increase-user-reputation() is called when a proposal passes",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__increase-user-reputation() is called when a proposal passes",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__increase-user-reputation() is called when a proposal passes",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__increase-user-reputation() is called when a proposal passes",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__increase-user-reputation() is called when a proposal passes",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__increase-user-reputation() is called when a proposal passes",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__increase-user-reputation() is called when a proposal passes",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u623049"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__increase-user-reputation() is called when a proposal passes",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__increase-user-reputation() is called when a proposal passes",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__increase-user-reputation() is called when a proposal passes",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u469250"
    ],
    "cost_result": {
      "total": {
        "write_length": 58,
        "write_count": 11,
        "read_length": 46503,
        "read_count": 38,
        "runtime": 176096
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1363,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__increase-user-reputation() is called when a proposal passes",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 2056,
        "write_count": 15,
        "read_length": 87350,
        "read_count": 84,
        "runtime": 450062
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 3028,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__increase-user-reputation() is called when a proposal passes",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-users",
    "method": "get-user-data-by-address",
    "args": [
      "ST1SJ3DTE5DN7X54YDH5D64R3BCB6A2AG2ZQ8YPD5"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 4714,
        "read_count": 5,
        "runtime": 8557
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__increase-user-reputation() is called when a proposal passes",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "vote-on-action-proposal",
    "args": [
      "u1",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 475,
        "write_count": 5,
        "read_length": 38788,
        "read_count": 30,
        "runtime": 136616
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 470,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__increase-user-reputation() is called when a proposal passes",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "vote-on-action-proposal",
    "args": [
      "u1",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 307,
        "write_count": 2,
        "read_length": 38784,
        "read_count": 24,
        "runtime": 109926
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 305,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__increase-user-reputation() is called when a proposal passes",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "conclude-action-proposal",
    "args": [
      "u1",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message"
    ],
    "cost_result": {
      "total": {
        "write_length": 356,
        "write_count": 8,
        "read_length": 91956,
        "read_count": 78,
        "runtime": 641713
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1006,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__increase-user-reputation() is called when a proposal passes",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-users",
    "method": "get-user-data-by-address",
    "args": [
      "ST1SJ3DTE5DN7X54YDH5D64R3BCB6A2AG2ZQ8YPD5"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 4714,
        "read_count": 5,
        "runtime": 8557
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__decrease-user-reputation() fails if called directly",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-users",
    "method": "decrease-user-reputation",
    "args": [
      "ST1SJ3DTE5DN7X54YDH5D64R3BCB6A2AG2ZQ8YPD5",
      "u5"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 4587,
        "read_count": 4,
        "runtime": 7918
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__decrease-user-reputation() is called when a proposal fails",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__decrease-user-reputation() is called when a proposal fails",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__decrease-user-reputation() is called when a proposal fails",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__decrease-user-reputation() is called when a proposal fails",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__decrease-user-reputation() is called when a proposal fails",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__decrease-user-reputation() is called when a proposal fails",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__decrease-user-reputation() is called when a proposal fails",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__decrease-user-reputation() is called when a proposal fails",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__decrease-user-reputation() is called when a proposal fails",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__decrease-user-reputation() is called when a proposal fails",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__decrease-user-reputation() is called when a proposal fails",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__decrease-user-reputation() is called when a proposal fails",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__decrease-user-reputation() is called when a proposal fails",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__decrease-user-reputation() is called when a proposal fails",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__decrease-user-reputation() is called when a proposal fails",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__decrease-user-reputation() is called when a proposal fails",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__decrease-user-reputation() is called when a proposal fails",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__decrease-user-reputation() is called when a proposal fails",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__decrease-user-reputation() is called when a proposal fails",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__decrease-user-reputation() is called when a proposal fails",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__decrease-user-reputation() is called when a proposal fails",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__decrease-user-reputation() is called when a proposal fails",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__decrease-user-reputation() is called when a proposal fails",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__decrease-user-reputation() is called when a proposal fails",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__decrease-user-reputation() is called when a proposal fails",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__decrease-user-reputation() is called when a proposal fails",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u436703"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__decrease-user-reputation() is called when a proposal fails",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__decrease-user-reputation() is called when a proposal fails",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__decrease-user-reputation() is called when a proposal fails",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u385973"
    ],
    "cost_result": {
      "total": {
        "write_length": 58,
        "write_count": 11,
        "read_length": 46503,
        "read_count": 38,
        "runtime": 176096
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1363,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__decrease-user-reputation() is called when a proposal fails",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "get-total-proposals",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24827,
        "read_count": 8,
        "runtime": 29318
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__decrease-user-reputation() is called when a proposal fails",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 2056,
        "write_count": 15,
        "read_length": 87350,
        "read_count": 84,
        "runtime": 450062
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 3028,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__decrease-user-reputation() is called when a proposal fails",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "vote-on-action-proposal",
    "args": [
      "u1",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 475,
        "write_count": 5,
        "read_length": 38788,
        "read_count": 30,
        "runtime": 136616
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 470,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__decrease-user-reputation() is called when a proposal fails",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "vote-on-action-proposal",
    "args": [
      "u1",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 307,
        "write_count": 2,
        "read_length": 38784,
        "read_count": 24,
        "runtime": 109926
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 305,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__decrease-user-reputation() is called when a proposal fails",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "conclude-action-proposal",
    "args": [
      "u1",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message"
    ],
    "cost_result": {
      "total": {
        "write_length": 356,
        "write_count": 8,
        "read_length": 91956,
        "read_count": 78,
        "runtime": 641713
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1006,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__decrease-user-reputation() is called when a proposal fails",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-users",
    "method": "get-user-data-by-address",
    "args": [
      "ST1SJ3DTE5DN7X54YDH5D64R3BCB6A2AG2ZQ8YPD5"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 4714,
        "read_count": 5,
        "runtime": 8557
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__decrease-user-reputation() is called when a proposal fails",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__decrease-user-reputation() is called when a proposal fails",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__decrease-user-reputation() is called when a proposal fails",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u681067"
    ],
    "cost_result": {
      "total": {
        "write_length": 58,
        "write_count": 11,
        "read_length": 46503,
        "read_count": 38,
        "runtime": 176096
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1363,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__decrease-user-reputation() is called when a proposal fails",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "get-total-proposals",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24827,
        "read_count": 8,
        "runtime": 29318
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__decrease-user-reputation() is called when a proposal fails",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 1888,
        "write_count": 12,
        "read_length": 87346,
        "read_count": 78,
        "runtime": 423372
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2863,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__decrease-user-reputation() is called when a proposal fails",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "vote-on-action-proposal",
    "args": [
      "u2",
      "false"
    ],
    "cost_result": {
      "total": {
        "write_length": 307,
        "write_count": 2,
        "read_length": 38784,
        "read_count": 24,
        "runtime": 109942
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 305,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__decrease-user-reputation() is called when a proposal fails",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "conclude-action-proposal",
    "args": [
      "u2",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message"
    ],
    "cost_result": {
      "total": {
        "write_length": 337,
        "write_count": 5,
        "read_length": 58682,
        "read_count": 41,
        "runtime": 305233
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 661,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__public functions: aibtc-dao-users__decrease-user-reputation() is called when a proposal fails",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-users",
    "method": "get-user-data-by-address",
    "args": [
      "ST1SJ3DTE5DN7X54YDH5D64R3BCB6A2AG2ZQ8YPD5"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 4714,
        "read_count": 5,
        "runtime": 8557
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__read-only functions: aibtc-dao-users__get-user-count() returns expected value",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-users",
    "method": "get-user-count",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 4582,
        "read_count": 4,
        "runtime": 5149
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__read-only functions: aibtc-dao-users__get-user-index() returns expected value",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-users",
    "method": "get-user-index",
    "args": [
      "ST1SJ3DTE5DN7X54YDH5D64R3BCB6A2AG2ZQ8YPD5"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 4587,
        "read_count": 4,
        "runtime": 6336
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__read-only functions: aibtc-dao-users__get-user-data-by-index() returns expected value",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-users",
    "method": "get-user-data-by-index",
    "args": [
      "u1"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 4582,
        "read_count": 4,
        "runtime": 5803
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-users.test.ts__read-only functions: aibtc-dao-users__get-user-data-by-address() returns expected value",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-users",
    "method": "get-user-data-by-address",
    "args": [
      "ST1SJ3DTE5DN7X54YDH5D64R3BCB6A2AG2ZQ8YPD5"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 4587,
        "read_count": 4,
        "runtime": 7288
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-config.test.ts__public functions: aibtc-agent-account__approve-contract() fails if caller is not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "approve-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.unknown-token",
      "u3"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16270,
        "read_count": 3,
        "runtime": 20659
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-config.test.ts__public functions: aibtc-agent-account__approve-contract() succeeds and sets new approved contract",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "approve-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.new-token",
      "u3"
    ],
    "cost_result": {
      "total": {
        "write_length": 71,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 40522
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 70,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-config.test.ts__public functions: aibtc-agent-account__approve-contract() succeeds and sets new approved contract",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "is-approved-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.new-token",
      "u3"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16341,
        "read_count": 4,
        "runtime": 20383
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-config.test.ts__public functions: aibtc-agent-account__approve-contract() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "approve-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.another-token",
      "u3"
    ],
    "cost_result": {
      "total": {
        "write_length": 75,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 40538
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 74,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-config.test.ts__public functions: aibtc-agent-account__revoke-contract() fails if caller is not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "revoke-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.unknown-token",
      "u3"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16270,
        "read_count": 3,
        "runtime": 20659
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-config.test.ts__public functions: aibtc-agent-account__revoke-contract() succeeds and removes approved contract",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "approve-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.unknown-token",
      "u3"
    ],
    "cost_result": {
      "total": {
        "write_length": 75,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 40538
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 74,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-config.test.ts__public functions: aibtc-agent-account__revoke-contract() succeeds and removes approved contract",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "revoke-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.unknown-token",
      "u3"
    ],
    "cost_result": {
      "total": {
        "write_length": 75,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 40523
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 74,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-config.test.ts__public functions: aibtc-agent-account__revoke-contract() succeeds and removes approved contract",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "is-approved-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.unknown-token",
      "u3"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16345,
        "read_count": 4,
        "runtime": 20387
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-config.test.ts__public functions: aibtc-agent-account__revoke-contract() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "approve-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.unknown-token",
      "u3"
    ],
    "cost_result": {
      "total": {
        "write_length": 75,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 40538
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 74,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-config.test.ts__public functions: aibtc-agent-account__revoke-contract() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "revoke-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.unknown-token",
      "u3"
    ],
    "cost_result": {
      "total": {
        "write_length": 75,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 40523
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 74,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-config.test.ts__public functions: aibtc-agent-account__revoke-contract() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "approve-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.contract-to-revoke-by-agent",
      "u3"
    ],
    "cost_result": {
      "total": {
        "write_length": 89,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 40594
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 88,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-config.test.ts__public functions: aibtc-agent-account__revoke-contract() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "set-agent-can-approve-revoke-contracts",
    "args": [
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 2,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 31874
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-config.test.ts__public functions: aibtc-agent-account__revoke-contract() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "revoke-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.contract-to-revoke-by-agent",
      "u3"
    ],
    "cost_result": {
      "total": {
        "write_length": 89,
        "write_count": 1,
        "read_length": 16272,
        "read_count": 5,
        "runtime": 42000
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 88,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-config.test.ts__public functions: aibtc-agent-account__revoke-contract() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "is-approved-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.contract-to-revoke-by-agent",
      "u3"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16359,
        "read_count": 4,
        "runtime": 20401
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-config.test.ts__public functions: aibtc-agent-account__revoke-contract() fails for agent if permission is not granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "approve-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.another-contract-to-revoke-by-agent",
      "u3"
    ],
    "cost_result": {
      "total": {
        "write_length": 97,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 40626
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 96,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-config.test.ts__public functions: aibtc-agent-account__revoke-contract() fails for agent if permission is not granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "set-agent-can-approve-revoke-contracts",
    "args": [
      "false"
    ],
    "cost_result": {
      "total": {
        "write_length": 2,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 31874
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-config.test.ts__public functions: aibtc-agent-account__revoke-contract() fails for agent if permission is not granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "revoke-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.another-contract-to-revoke-by-agent",
      "u3"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16272,
        "read_count": 4,
        "runtime": 21144
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-config.test.ts__public functions: aibtc-agent-account__set-agent-can-deposit-assets() fails if caller is not the owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "set-agent-can-deposit-assets",
    "args": [
      "false"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16270,
        "read_count": 3,
        "runtime": 17377
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-config.test.ts__public functions: aibtc-agent-account__set-agent-can-deposit-assets() succeeds and sets agent permission",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "set-agent-can-deposit-assets",
    "args": [
      "false"
    ],
    "cost_result": {
      "total": {
        "write_length": 2,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 31049
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-config.test.ts__public functions: aibtc-agent-account__set-agent-can-deposit-assets() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "set-agent-can-deposit-assets",
    "args": [
      "false"
    ],
    "cost_result": {
      "total": {
        "write_length": 2,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 31049
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-config.test.ts__public functions: aibtc-agent-account__set-agent-can-use-proposals() fails if caller is not the owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "set-agent-can-use-proposals",
    "args": [
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16270,
        "read_count": 3,
        "runtime": 17377
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-config.test.ts__public functions: aibtc-agent-account__set-agent-can-use-proposals() succeeds and sets agent permission",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "set-agent-can-use-proposals",
    "args": [
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 2,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 31259
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-config.test.ts__public functions: aibtc-agent-account__set-agent-can-use-proposals() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "set-agent-can-use-proposals",
    "args": [
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 2,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 31259
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-config.test.ts__public functions: aibtc-agent-account__set-agent-can-approve-revoke-contracts() fails if caller is not the owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "set-agent-can-approve-revoke-contracts",
    "args": [
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16270,
        "read_count": 3,
        "runtime": 17377
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-config.test.ts__public functions: aibtc-agent-account__set-agent-can-approve-revoke-contracts() succeeds and sets agent permission",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "set-agent-can-approve-revoke-contracts",
    "args": [
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 2,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 31874
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-config.test.ts__public functions: aibtc-agent-account__set-agent-can-approve-revoke-contracts() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "set-agent-can-approve-revoke-contracts",
    "args": [
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 2,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 31874
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-config.test.ts__public functions: aibtc-agent-account__set-agent-can-buy-sell-assets() fails if caller is not the owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "set-agent-can-buy-sell-assets",
    "args": [
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16270,
        "read_count": 3,
        "runtime": 17377
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-config.test.ts__public functions: aibtc-agent-account__set-agent-can-buy-sell-assets() succeeds and sets agent permission",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "set-agent-can-buy-sell-assets",
    "args": [
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 2,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 31064
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-config.test.ts__public functions: aibtc-agent-account__set-agent-can-buy-sell-assets() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "set-agent-can-buy-sell-assets",
    "args": [
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 2,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 31064
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-config.test.ts__public functions: aibtc-agent-account__get-config() returns the correct configuration",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "get-config",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16270,
        "read_count": 3,
        "runtime": 21920
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-config.test.ts__read-only functions: aibtc-agent-account__is-approved-contract() returns expected values for a contract",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "is-approved-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.unknown-token",
      "u3"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16343,
        "read_count": 4,
        "runtime": 20385
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-config.test.ts__read-only functions: aibtc-agent-account__is-approved-contract() returns expected values for a contract",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "approve-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.unknown-token",
      "u3"
    ],
    "cost_result": {
      "total": {
        "write_length": 75,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 40538
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 74,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-config.test.ts__read-only functions: aibtc-agent-account__is-approved-contract() returns expected values for a contract",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "is-approved-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.unknown-token",
      "u3"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16345,
        "read_count": 4,
        "runtime": 20387
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-config.test.ts__read-only functions: aibtc-agent-account__is-approved-contract() returns expected values for a contract",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "revoke-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.unknown-token",
      "u3"
    ],
    "cost_result": {
      "total": {
        "write_length": 75,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 40523
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 74,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-config.test.ts__read-only functions: aibtc-agent-account__is-approved-contract() returns expected values for a contract",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "is-approved-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.unknown-token",
      "u3"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16345,
        "read_count": 4,
        "runtime": 20387
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-config.test.ts__read-only functions: aibtc-agent-account__get-configuration() returns the correct configuration",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "get-configuration",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16270,
        "read_count": 3,
        "runtime": 19518
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-config.test.ts__read-only functions: aibtc-agent-account__get-approval-types() returns the correct approval types",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "get-approval-types",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16270,
        "read_count": 3,
        "runtime": 18378
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-config.test.ts__read-only functions: aibtc-agent-account__get-agent-permissions() returns the correct agent permissions",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "get-agent-permissions",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16278,
        "read_count": 7,
        "runtime": 20266
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-config.test.ts__read-only functions: aibtc-agent-account__get-agent-permissions() returns the correct agent permissions",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "set-agent-can-buy-sell-assets",
    "args": [
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 2,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 31064
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-config.test.ts__read-only functions: aibtc-agent-account__get-agent-permissions() returns the correct agent permissions",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "get-agent-permissions",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16278,
        "read_count": 7,
        "runtime": 20266
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-config.test.ts__read-only functions: aibtc-agent-account__agent can approve/revoke contracts when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "set-agent-can-approve-revoke-contracts",
    "args": [
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 2,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 31874
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-config.test.ts__read-only functions: aibtc-agent-account__agent can approve/revoke contracts when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "approve-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.some-new-contract",
      "u3"
    ],
    "cost_result": {
      "total": {
        "write_length": 79,
        "write_count": 1,
        "read_length": 16272,
        "read_count": 5,
        "runtime": 41975
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 78,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-config.test.ts__read-only functions: aibtc-agent-account__agent can approve/revoke contracts when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "is-approved-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.some-new-contract",
      "u3"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16349,
        "read_count": 4,
        "runtime": 20391
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-config.test.ts__read-only functions: aibtc-agent-account__agent can approve/revoke contracts when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "set-agent-can-approve-revoke-contracts",
    "args": [
      "false"
    ],
    "cost_result": {
      "total": {
        "write_length": 2,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 31874
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-config.test.ts__read-only functions: aibtc-agent-account__agent can approve/revoke contracts when authorized and fails when revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "approve-contract",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.another-new-contract",
      "u3"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16272,
        "read_count": 4,
        "runtime": 21144
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() fails if tx-sender is not the token sender",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
    "method": "transfer",
    "args": [
      "u10000",
      "ST1SJ3DTE5DN7X54YDH5D64R3BCB6A2AG2ZQ8YPD5",
      "ST2CY5V39NHDPWSXMW9QDT3HC3GD6Q6XX4CFRK9AG",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 4381,
        "read_count": 3,
        "runtime": 6473
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() succeeds with valid parameters",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
    "method": "get-balance",
    "args": [
      "ST2CY5V39NHDPWSXMW9QDT3HC3GD6Q6XX4CFRK9AG"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 4382,
        "read_count": 4,
        "runtime": 5800
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() succeeds with valid parameters",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() succeeds with valid parameters",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() succeeds with valid parameters",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() succeeds with valid parameters",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() succeeds with valid parameters",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() succeeds with valid parameters",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() succeeds with valid parameters",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() succeeds with valid parameters",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() succeeds with valid parameters",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() succeeds with valid parameters",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() succeeds with valid parameters",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() succeeds with valid parameters",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() succeeds with valid parameters",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() succeeds with valid parameters",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() succeeds with valid parameters",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() succeeds with valid parameters",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() succeeds with valid parameters",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() succeeds with valid parameters",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() succeeds with valid parameters",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() succeeds with valid parameters",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() succeeds with valid parameters",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() succeeds with valid parameters",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() succeeds with valid parameters",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() succeeds with valid parameters",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u1000000"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() succeeds with valid parameters",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
    "method": "transfer",
    "args": [
      "u10000",
      "ST1SJ3DTE5DN7X54YDH5D64R3BCB6A2AG2ZQ8YPD5",
      "ST2CY5V39NHDPWSXMW9QDT3HC3GD6Q6XX4CFRK9AG",
      "none"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 4382,
        "read_count": 5,
        "runtime": 9748
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() succeeds with valid parameters",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
    "method": "get-balance",
    "args": [
      "ST2CY5V39NHDPWSXMW9QDT3HC3GD6Q6XX4CFRK9AG"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 4382,
        "read_count": 4,
        "runtime": 5800
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() handles memo correctly",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() handles memo correctly",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() handles memo correctly",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() handles memo correctly",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() handles memo correctly",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() handles memo correctly",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() handles memo correctly",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() handles memo correctly",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() handles memo correctly",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() handles memo correctly",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() handles memo correctly",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() handles memo correctly",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() handles memo correctly",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() handles memo correctly",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() handles memo correctly",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() handles memo correctly",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() handles memo correctly",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() handles memo correctly",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() handles memo correctly",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() handles memo correctly",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() handles memo correctly",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() handles memo correctly",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() handles memo correctly",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() handles memo correctly",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u1000000"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__transfer() handles memo correctly",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
    "method": "transfer",
    "args": [
      "u10000",
      "ST1SJ3DTE5DN7X54YDH5D64R3BCB6A2AG2ZQ8YPD5",
      "ST2CY5V39NHDPWSXMW9QDT3HC3GD6Q6XX4CFRK9AG",
      "(some 0x54657374206d656d6f)"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 4382,
        "read_count": 5,
        "runtime": 9952
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__send-many() succeeds with multiple recipients",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__send-many() succeeds with multiple recipients",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__send-many() succeeds with multiple recipients",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__send-many() succeeds with multiple recipients",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__send-many() succeeds with multiple recipients",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__send-many() succeeds with multiple recipients",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__send-many() succeeds with multiple recipients",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__send-many() succeeds with multiple recipients",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__send-many() succeeds with multiple recipients",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__send-many() succeeds with multiple recipients",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__send-many() succeeds with multiple recipients",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__send-many() succeeds with multiple recipients",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__send-many() succeeds with multiple recipients",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__send-many() succeeds with multiple recipients",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__send-many() succeeds with multiple recipients",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__send-many() succeeds with multiple recipients",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__send-many() succeeds with multiple recipients",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__send-many() succeeds with multiple recipients",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__send-many() succeeds with multiple recipients",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__send-many() succeeds with multiple recipients",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__send-many() succeeds with multiple recipients",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__send-many() succeeds with multiple recipients",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__send-many() succeeds with multiple recipients",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__send-many() succeeds with multiple recipients",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u1000000"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__send-many() succeeds with multiple recipients",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
    "method": "get-balance",
    "args": [
      "ST2CY5V39NHDPWSXMW9QDT3HC3GD6Q6XX4CFRK9AG"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 4382,
        "read_count": 4,
        "runtime": 5800
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__send-many() succeeds with multiple recipients",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
    "method": "get-balance",
    "args": [
      "ST2JHG361ZXG51QTKY2NQCVBPPRRE2KZB1HR05NNC"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 4382,
        "read_count": 4,
        "runtime": 5800
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__send-many() succeeds with multiple recipients",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
    "method": "send-many",
    "args": [
      "((tuple (amount u5000) (memo none) (to ST2CY5V39NHDPWSXMW9QDT3HC3GD6Q6XX4CFRK9AG)) (tuple (amount u7500) (memo (some 0x4261746368207472616e73666572)) (to ST2JHG361ZXG51QTKY2NQCVBPPRRE2KZB1HR05NNC)))"
    ],
    "cost_result": {
      "total": {
        "write_length": 2,
        "write_count": 4,
        "read_length": 4383,
        "read_count": 7,
        "runtime": 140315
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 656,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__send-many() succeeds with multiple recipients",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
    "method": "get-balance",
    "args": [
      "ST2CY5V39NHDPWSXMW9QDT3HC3GD6Q6XX4CFRK9AG"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 4382,
        "read_count": 4,
        "runtime": 5800
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__send-many() succeeds with multiple recipients",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
    "method": "get-balance",
    "args": [
      "ST2JHG361ZXG51QTKY2NQCVBPPRRE2KZB1HR05NNC"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 4382,
        "read_count": 4,
        "runtime": 5800
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__send-many() fails if any transfer fails",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
    "method": "get-total-supply",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 4382,
        "read_count": 4,
        "runtime": 5116
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__send-many() fails if any transfer fails",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
    "method": "send-many",
    "args": [
      "((tuple (amount u5000) (memo none) (to ST2CY5V39NHDPWSXMW9QDT3HC3GD6Q6XX4CFRK9AG)) (tuple (amount u200000000000000000) (memo none) (to ST2JHG361ZXG51QTKY2NQCVBPPRRE2KZB1HR05NNC)))"
    ],
    "cost_result": {
      "total": {
        "write_length": 2,
        "write_count": 4,
        "read_length": 4383,
        "read_count": 7,
        "runtime": 136559
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__tokens were properly distributed on deployment",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
    "method": "get-balance",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-treasury"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 4382,
        "read_count": 4,
        "runtime": 5800
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__tokens were properly distributed on deployment",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
    "method": "get-balance",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 4382,
        "read_count": 4,
        "runtime": 5800
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__public functions: aibtc-faktory__tokens were properly distributed on deployment",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
    "method": "get-balance",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 4382,
        "read_count": 4,
        "runtime": 5800
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__read-only functions: aibtc-faktory__get-name() returns expected value",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
    "method": "get-name",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 4381,
        "read_count": 3,
        "runtime": 4680
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__read-only functions: aibtc-faktory__get-symbol() returns expected value",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
    "method": "get-symbol",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 4381,
        "read_count": 3,
        "runtime": 4680
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__read-only functions: aibtc-faktory__get-decimals() returns expected value",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
    "method": "get-decimals",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 4381,
        "read_count": 3,
        "runtime": 4680
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__read-only functions: aibtc-faktory__get-balance() returns expected value for accounts",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__read-only functions: aibtc-faktory__get-balance() returns expected value for accounts",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__read-only functions: aibtc-faktory__get-balance() returns expected value for accounts",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__read-only functions: aibtc-faktory__get-balance() returns expected value for accounts",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__read-only functions: aibtc-faktory__get-balance() returns expected value for accounts",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__read-only functions: aibtc-faktory__get-balance() returns expected value for accounts",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__read-only functions: aibtc-faktory__get-balance() returns expected value for accounts",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__read-only functions: aibtc-faktory__get-balance() returns expected value for accounts",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__read-only functions: aibtc-faktory__get-balance() returns expected value for accounts",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__read-only functions: aibtc-faktory__get-balance() returns expected value for accounts",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__read-only functions: aibtc-faktory__get-balance() returns expected value for accounts",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__read-only functions: aibtc-faktory__get-balance() returns expected value for accounts",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__read-only functions: aibtc-faktory__get-balance() returns expected value for accounts",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__read-only functions: aibtc-faktory__get-balance() returns expected value for accounts",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__read-only functions: aibtc-faktory__get-balance() returns expected value for accounts",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__read-only functions: aibtc-faktory__get-balance() returns expected value for accounts",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__read-only functions: aibtc-faktory__get-balance() returns expected value for accounts",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__read-only functions: aibtc-faktory__get-balance() returns expected value for accounts",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__read-only functions: aibtc-faktory__get-balance() returns expected value for accounts",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__read-only functions: aibtc-faktory__get-balance() returns expected value for accounts",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__read-only functions: aibtc-faktory__get-balance() returns expected value for accounts",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__read-only functions: aibtc-faktory__get-balance() returns expected value for accounts",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__read-only functions: aibtc-faktory__get-balance() returns expected value for accounts",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__read-only functions: aibtc-faktory__get-balance() returns expected value for accounts",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__read-only functions: aibtc-faktory__get-balance() returns expected value for accounts",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u705589"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__read-only functions: aibtc-faktory__get-balance() returns expected value for accounts",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
    "method": "get-balance",
    "args": [
      "ST1SJ3DTE5DN7X54YDH5D64R3BCB6A2AG2ZQ8YPD5"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 4382,
        "read_count": 4,
        "runtime": 5800
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__read-only functions: aibtc-faktory__get-total-supply() returns expected value",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
    "method": "get-total-supply",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 4382,
        "read_count": 4,
        "runtime": 5116
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/token/aibtc-faktory.test.ts__read-only functions: aibtc-faktory__get-token-uri() returns expected value",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
    "method": "get-token-uri",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 4419,
        "read_count": 4,
        "runtime": 5201
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-assets.test.ts__public functions: aibtc-agent-account__deposit-stx() fails if caller is not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-stx",
    "args": [
      "u1000000"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16270,
        "read_count": 3,
        "runtime": 18506
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-assets.test.ts__public functions: aibtc-agent-account__deposit-stx() fails for agent if permission is revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "set-agent-can-deposit-assets",
    "args": [
      "false"
    ],
    "cost_result": {
      "total": {
        "write_length": 2,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 31049
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-assets.test.ts__public functions: aibtc-agent-account__deposit-stx() fails for agent if permission is revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-stx",
    "args": [
      "u1000000"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16272,
        "read_count": 4,
        "runtime": 18991
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-assets.test.ts__public functions: aibtc-agent-account__deposit-stx() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "set-agent-can-deposit-assets",
    "args": [
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 2,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 31049
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-assets.test.ts__public functions: aibtc-agent-account__deposit-stx() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-stx",
    "args": [
      "u1000000"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 1,
        "read_length": 16273,
        "read_count": 5,
        "runtime": 40119
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 376,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-assets.test.ts__public functions: aibtc-agent-account__deposit-stx() succeeds and deposits STX to the agent account",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-stx",
    "args": [
      "u1000000"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 1,
        "read_length": 16271,
        "read_count": 4,
        "runtime": 38698
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 376,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-assets.test.ts__public functions: aibtc-agent-account__deposit-stx() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-stx",
    "args": [
      "u2000000"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 1,
        "read_length": 16271,
        "read_count": 4,
        "runtime": 38698
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 376,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-assets.test.ts__public functions: aibtc-agent-account__deposit-ft() fails if caller is not authorized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
      "u10000000"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16270,
        "read_count": 3,
        "runtime": 19089
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-assets.test.ts__public functions: aibtc-agent-account__deposit-ft() fails for agent if permission is revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "set-agent-can-deposit-assets",
    "args": [
      "false"
    ],
    "cost_result": {
      "total": {
        "write_length": 2,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 31049
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-assets.test.ts__public functions: aibtc-agent-account__deposit-ft() fails for agent if permission is revoked",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
      "u10000000"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16272,
        "read_count": 4,
        "runtime": 19574
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-assets.test.ts__public functions: aibtc-agent-account__deposit-ft() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "set-agent-can-deposit-assets",
    "args": [
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 2,
        "write_count": 1,
        "read_length": 16270,
        "read_count": 4,
        "runtime": 31049
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-assets.test.ts__public functions: aibtc-agent-account__deposit-ft() succeeds for agent if permission is granted",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-assets.test.ts__public functions: aibtc-agent-account__deposit-ft() succeeds for agent if permission is granted",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
      "u10000000"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 18577,
        "read_count": 10,
        "runtime": 63111
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-assets.test.ts__public functions: aibtc-agent-account__deposit-ft() succeeds and transfers sBTC to the account",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-assets.test.ts__public functions: aibtc-agent-account__deposit-ft() succeeds and transfers sBTC to the account",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
      "u100000000"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 18575,
        "read_count": 9,
        "runtime": 61690
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-assets.test.ts__public functions: aibtc-agent-account__deposit-ft() succeeds and transfers sBTC to the account",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "is-approved-contract",
    "args": [
      "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
      "u3"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16342,
        "read_count": 4,
        "runtime": 20384
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-assets.test.ts__public functions: aibtc-agent-account__deposit-ft() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-assets.test.ts__public functions: aibtc-agent-account__deposit-ft() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
      "u2000"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 18575,
        "read_count": 9,
        "runtime": 61690
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-assets.test.ts__public functions: aibtc-agent-account__withdraw-stx() fails if caller is not the owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "withdraw-stx",
    "args": [
      "u1000000"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16270,
        "read_count": 3,
        "runtime": 17407
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-assets.test.ts__public functions: aibtc-agent-account__withdraw-stx() succeeds and transfers STX to owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-stx",
    "args": [
      "u1000000"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 1,
        "read_length": 16271,
        "read_count": 4,
        "runtime": 38698
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 376,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-assets.test.ts__public functions: aibtc-agent-account__withdraw-stx() succeeds and transfers STX to owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "withdraw-stx",
    "args": [
      "u1000000"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 1,
        "read_length": 16271,
        "read_count": 4,
        "runtime": 38850
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 376,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-assets.test.ts__public functions: aibtc-agent-account__withdraw-stx() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-stx",
    "args": [
      "u2000000"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 1,
        "read_length": 16271,
        "read_count": 4,
        "runtime": 38698
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 376,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-assets.test.ts__public functions: aibtc-agent-account__withdraw-stx() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "withdraw-stx",
    "args": [
      "u2000000"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 1,
        "read_length": 16271,
        "read_count": 4,
        "runtime": 38850
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 376,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-assets.test.ts__public functions: aibtc-agent-account__withdraw-ft() fails if caller is not the owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "withdraw-ft",
    "args": [
      "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
      "u10000000"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16270,
        "read_count": 3,
        "runtime": 17990
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-assets.test.ts__public functions: aibtc-agent-account__withdraw-ft() fails if contract is not approved",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "withdraw-ft",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.unknown-token",
      "u10000000"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 16343,
        "read_count": 4,
        "runtime": 35636
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-assets.test.ts__public functions: aibtc-agent-account__withdraw-ft() succeeds and transfers FT to the owner",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-assets.test.ts__public functions: aibtc-agent-account__withdraw-ft() succeeds and transfers FT to the owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
      "u100000"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 18575,
        "read_count": 9,
        "runtime": 61690
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-assets.test.ts__public functions: aibtc-agent-account__withdraw-ft() succeeds and transfers FT to the owner",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "withdraw-ft",
    "args": [
      "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
      "u100000"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 18647,
        "read_count": 10,
        "runtime": 79627
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-assets.test.ts__public functions: aibtc-agent-account__withdraw-ft() emits the correct notification event",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-assets.test.ts__public functions: aibtc-agent-account__withdraw-ft() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "deposit-ft",
    "args": [
      "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
      "u2000"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 18575,
        "read_count": 9,
        "runtime": 61690
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/agent/aibtc-agent-account-assets.test.ts__public functions: aibtc-agent-account__withdraw-ft() emits the correct notification event",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-agent-account",
    "method": "withdraw-ft",
    "args": [
      "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
      "u2000"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 18647,
        "read_count": 10,
        "runtime": 79627
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/aibtc-base-dao.test.ts__public functions: aibtc-base-dao__construct() fails if called by another address",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 4570,
        "read_count": 5,
        "runtime": 7767
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/aibtc-base-dao.test.ts__public functions: aibtc-base-dao__construct() succeeds if called by the deployer",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/aibtc-base-dao.test.ts__public functions: aibtc-base-dao__construct() fails if called after succeeding once",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/aibtc-base-dao.test.ts__public functions: aibtc-base-dao__construct() fails if called after succeeding once",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 4547,
        "read_count": 4,
        "runtime": 6343
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/aibtc-base-dao.test.ts__public functions: aibtc-base-dao__execute() fails if called directly",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "execute",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao",
      "ST1SJ3DTE5DN7X54YDH5D64R3BCB6A2AG2ZQ8YPD5"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 4568,
        "read_count": 4,
        "runtime": 8897
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/aibtc-base-dao.test.ts__public functions: aibtc-base-dao__set-extension() fails if called directly",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "set-extension",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 4568,
        "read_count": 4,
        "runtime": 8347
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/aibtc-base-dao.test.ts__public functions: aibtc-base-dao__set-extensions() fails if called directly",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "set-extensions",
    "args": [
      "((tuple (enabled true) (extension ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao)))"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 4568,
        "read_count": 4,
        "runtime": 84472
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/aibtc-base-dao.test.ts__public functions: aibtc-base-dao__request-extension-callback() fails if called directly",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "request-extension-callback",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-treasury",
      "0x3078"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 4568,
        "read_count": 4,
        "runtime": 7804
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/aibtc-base-dao.test.ts__read-only functions: aibtc-base-dao__is-constructed() returns false before dao is constructed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "is-constructed",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 4547,
        "read_count": 4,
        "runtime": 5114
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/aibtc-base-dao.test.ts__read-only functions: aibtc-base-dao__is-constructed() returns true after dao is constructed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/aibtc-base-dao.test.ts__read-only functions: aibtc-base-dao__is-constructed() returns true after dao is constructed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "is-constructed",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 4547,
        "read_count": 4,
        "runtime": 5114
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/aibtc-base-dao.test.ts__read-only functions: aibtc-base-dao__is-extension() returns false before dao is constructed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "is-extension",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-treasury"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 4583,
        "read_count": 4,
        "runtime": 6616
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/aibtc-base-dao.test.ts__read-only functions: aibtc-base-dao__is-extension() returns true after dao is constructed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/aibtc-base-dao.test.ts__read-only functions: aibtc-base-dao__is-extension() returns true after dao is constructed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "is-extension",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-treasury"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 4585,
        "read_count": 4,
        "runtime": 6618
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/aibtc-base-dao.test.ts__read-only functions: aibtc-base-dao__executed-at() returns none if the proposal was not executed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "executed-at",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 4594,
        "read_count": 4,
        "runtime": 19717
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/aibtc-base-dao.test.ts__read-only functions: aibtc-base-dao__executed-at() returns some blockheight if the proposal was executed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/aibtc-base-dao.test.ts__read-only functions: aibtc-base-dao__executed-at() returns some blockheight if the proposal was executed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "executed-at",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 4612,
        "read_count": 4,
        "runtime": 19735
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-treasury.test.ts__public functions: aibtc-treasury__callback() should respond with (ok true)",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-treasury",
    "method": "callback",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM",
      "0x74657374"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 3543,
        "read_count": 3,
        "runtime": 4276
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-treasury.test.ts__public functions: aibtc-treasury__allow-asset() fails if called directly",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-treasury",
    "method": "allow-asset",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.token",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 8111,
        "read_count": 7,
        "runtime": 11949
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-treasury.test.ts__public functions: aibtc-treasury__deposit-ft() fails if asset not allowed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-treasury",
    "method": "deposit-ft",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.unknown-token",
      "u100"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 3580,
        "read_count": 4,
        "runtime": 20538
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-treasury.test.ts__public functions: aibtc-treasury__deposit-ft() succeeds if asset allowed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-treasury.test.ts__public functions: aibtc-treasury__deposit-ft() succeeds if asset allowed",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-treasury.test.ts__public functions: aibtc-treasury__deposit-ft() succeeds if asset allowed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-treasury.test.ts__public functions: aibtc-treasury__deposit-ft() succeeds if asset allowed",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-treasury.test.ts__public functions: aibtc-treasury__deposit-ft() succeeds if asset allowed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-treasury.test.ts__public functions: aibtc-treasury__deposit-ft() succeeds if asset allowed",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-treasury.test.ts__public functions: aibtc-treasury__deposit-ft() succeeds if asset allowed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-treasury.test.ts__public functions: aibtc-treasury__deposit-ft() succeeds if asset allowed",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-treasury.test.ts__public functions: aibtc-treasury__deposit-ft() succeeds if asset allowed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-treasury.test.ts__public functions: aibtc-treasury__deposit-ft() succeeds if asset allowed",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-treasury.test.ts__public functions: aibtc-treasury__deposit-ft() succeeds if asset allowed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-treasury.test.ts__public functions: aibtc-treasury__deposit-ft() succeeds if asset allowed",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-treasury.test.ts__public functions: aibtc-treasury__deposit-ft() succeeds if asset allowed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-treasury.test.ts__public functions: aibtc-treasury__deposit-ft() succeeds if asset allowed",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-treasury.test.ts__public functions: aibtc-treasury__deposit-ft() succeeds if asset allowed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-treasury.test.ts__public functions: aibtc-treasury__deposit-ft() succeeds if asset allowed",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-treasury.test.ts__public functions: aibtc-treasury__deposit-ft() succeeds if asset allowed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-treasury.test.ts__public functions: aibtc-treasury__deposit-ft() succeeds if asset allowed",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-treasury.test.ts__public functions: aibtc-treasury__deposit-ft() succeeds if asset allowed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-treasury.test.ts__public functions: aibtc-treasury__deposit-ft() succeeds if asset allowed",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-treasury.test.ts__public functions: aibtc-treasury__deposit-ft() succeeds if asset allowed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-treasury.test.ts__public functions: aibtc-treasury__deposit-ft() succeeds if asset allowed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-treasury.test.ts__public functions: aibtc-treasury__deposit-ft() succeeds if asset allowed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-treasury.test.ts__public functions: aibtc-treasury__deposit-ft() succeeds if asset allowed",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-treasury.test.ts__public functions: aibtc-treasury__deposit-ft() succeeds if asset allowed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u100000"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-treasury.test.ts__public functions: aibtc-treasury__deposit-ft() succeeds if asset allowed",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-treasury",
    "method": "deposit-ft",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u100"
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 7964,
        "read_count": 9,
        "runtime": 63181
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-treasury.test.ts__public functions: aibtc-treasury__withdraw-ft() fails if called directly",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-treasury",
    "method": "withdraw-ft",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.unknown-token",
      "u100",
      "ST1SJ3DTE5DN7X54YDH5D64R3BCB6A2AG2ZQ8YPD5"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 8111,
        "read_count": 7,
        "runtime": 12562
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-treasury.test.ts__read-only functions: aibtc-treasury__is-allowed-asset() returns expected value",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-treasury",
    "method": "is-allowed-asset",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.unknown-token"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 3580,
        "read_count": 4,
        "runtime": 6259
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-treasury.test.ts__read-only functions: aibtc-treasury__get-allowed-asset() returns expected value",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-treasury",
    "method": "get-allowed-asset",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.token"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 3572,
        "read_count": 4,
        "runtime": 5321
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-treasury.test.ts__read-only functions: aibtc-treasury__get-contract-info() returns expected value",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-treasury",
    "method": "get-contract-info",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 3543,
        "read_count": 3,
        "runtime": 5915
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/actions/aibtc-action-send-message.test.ts__public functions: aibtc-action-send-message__callback() should respond with (ok true)",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
    "method": "callback",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM",
      "0x74657374"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 1513,
        "read_count": 3,
        "runtime": 2246
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/actions/aibtc-action-send-message.test.ts__public functions: aibtc-action-send-message__run() fails if called directly",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
    "method": "run",
    "args": [
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 6081,
        "read_count": 7,
        "runtime": 52772
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/actions/aibtc-action-send-message.test.ts__public functions: aibtc-action-send-message__run() succeeds if called as a DAO action proposal",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/actions/aibtc-action-send-message.test.ts__public functions: aibtc-action-send-message__run() succeeds if called as a DAO action proposal",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/actions/aibtc-action-send-message.test.ts__public functions: aibtc-action-send-message__run() succeeds if called as a DAO action proposal",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/actions/aibtc-action-send-message.test.ts__public functions: aibtc-action-send-message__run() succeeds if called as a DAO action proposal",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/actions/aibtc-action-send-message.test.ts__public functions: aibtc-action-send-message__run() succeeds if called as a DAO action proposal",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/actions/aibtc-action-send-message.test.ts__public functions: aibtc-action-send-message__run() succeeds if called as a DAO action proposal",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/actions/aibtc-action-send-message.test.ts__public functions: aibtc-action-send-message__run() succeeds if called as a DAO action proposal",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/actions/aibtc-action-send-message.test.ts__public functions: aibtc-action-send-message__run() succeeds if called as a DAO action proposal",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/actions/aibtc-action-send-message.test.ts__public functions: aibtc-action-send-message__run() succeeds if called as a DAO action proposal",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/actions/aibtc-action-send-message.test.ts__public functions: aibtc-action-send-message__run() succeeds if called as a DAO action proposal",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/actions/aibtc-action-send-message.test.ts__public functions: aibtc-action-send-message__run() succeeds if called as a DAO action proposal",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/actions/aibtc-action-send-message.test.ts__public functions: aibtc-action-send-message__run() succeeds if called as a DAO action proposal",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/actions/aibtc-action-send-message.test.ts__public functions: aibtc-action-send-message__run() succeeds if called as a DAO action proposal",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/actions/aibtc-action-send-message.test.ts__public functions: aibtc-action-send-message__run() succeeds if called as a DAO action proposal",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/actions/aibtc-action-send-message.test.ts__public functions: aibtc-action-send-message__run() succeeds if called as a DAO action proposal",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/actions/aibtc-action-send-message.test.ts__public functions: aibtc-action-send-message__run() succeeds if called as a DAO action proposal",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/actions/aibtc-action-send-message.test.ts__public functions: aibtc-action-send-message__run() succeeds if called as a DAO action proposal",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/actions/aibtc-action-send-message.test.ts__public functions: aibtc-action-send-message__run() succeeds if called as a DAO action proposal",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/actions/aibtc-action-send-message.test.ts__public functions: aibtc-action-send-message__run() succeeds if called as a DAO action proposal",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/actions/aibtc-action-send-message.test.ts__public functions: aibtc-action-send-message__run() succeeds if called as a DAO action proposal",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/actions/aibtc-action-send-message.test.ts__public functions: aibtc-action-send-message__run() succeeds if called as a DAO action proposal",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/actions/aibtc-action-send-message.test.ts__public functions: aibtc-action-send-message__run() succeeds if called as a DAO action proposal",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/actions/aibtc-action-send-message.test.ts__public functions: aibtc-action-send-message__run() succeeds if called as a DAO action proposal",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/actions/aibtc-action-send-message.test.ts__public functions: aibtc-action-send-message__run() succeeds if called as a DAO action proposal",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/actions/aibtc-action-send-message.test.ts__public functions: aibtc-action-send-message__run() succeeds if called as a DAO action proposal",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/actions/aibtc-action-send-message.test.ts__public functions: aibtc-action-send-message__run() succeeds if called as a DAO action proposal",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u610515"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/actions/aibtc-action-send-message.test.ts__public functions: aibtc-action-send-message__run() succeeds if called as a DAO action proposal",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/actions/aibtc-action-send-message.test.ts__public functions: aibtc-action-send-message__run() succeeds if called as a DAO action proposal",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/actions/aibtc-action-send-message.test.ts__public functions: aibtc-action-send-message__run() succeeds if called as a DAO action proposal",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u645529"
    ],
    "cost_result": {
      "total": {
        "write_length": 58,
        "write_count": 11,
        "read_length": 46503,
        "read_count": 38,
        "runtime": 176096
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1363,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/actions/aibtc-action-send-message.test.ts__public functions: aibtc-action-send-message__run() succeeds if called as a DAO action proposal",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/actions/aibtc-action-send-message.test.ts__public functions: aibtc-action-send-message__run() succeeds if called as a DAO action proposal",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/actions/aibtc-action-send-message.test.ts__public functions: aibtc-action-send-message__run() succeeds if called as a DAO action proposal",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u261764"
    ],
    "cost_result": {
      "total": {
        "write_length": 58,
        "write_count": 11,
        "read_length": 46503,
        "read_count": 38,
        "runtime": 176096
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1363,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/actions/aibtc-action-send-message.test.ts__public functions: aibtc-action-send-message__run() succeeds if called as a DAO action proposal",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/actions/aibtc-action-send-message.test.ts__public functions: aibtc-action-send-message__run() succeeds if called as a DAO action proposal",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/actions/aibtc-action-send-message.test.ts__public functions: aibtc-action-send-message__run() succeeds if called as a DAO action proposal",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u934669"
    ],
    "cost_result": {
      "total": {
        "write_length": 58,
        "write_count": 11,
        "read_length": 46503,
        "read_count": 38,
        "runtime": 176096
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1363,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/actions/aibtc-action-send-message.test.ts__public functions: aibtc-action-send-message__run() succeeds if called as a DAO action proposal",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "get-total-proposals",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24827,
        "read_count": 8,
        "runtime": 29318
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/actions/aibtc-action-send-message.test.ts__public functions: aibtc-action-send-message__run() succeeds if called as a DAO action proposal",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "create-action-proposal",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message",
      "0x0e000004a6492066696e69736865642074686520696d706c656d656e746174696f6e20666f7220746865206c6174657374206167656e74206163636f756e7420636f6e747261637420617070726f76616c2070726f636573732e204167656e74206163636f756e7420636f6e747261637420617070726f76616c7320616e64207265766f636174696f6e73206e6f7720726571756972652073706563696679696e672061207479706520706172616d65746572207468617420726570726573656e747320612068617264636f64656420636f6e7374616e7420696e2074686520636f6e74726163742e20466f6c6c6f77696e6720746865206368616e67657320696e2074686520636f6e7472616374206164646974696f6e616c20737570706f7274696e67206368616e676573207765726520726571756972656420696e207468652066726f6e74656e642c206261636b656e642c20616e64206167656e7420746f6f6c696e672e2053756d6d617279206f662074686520757064617465733a2066726f6e74656e643a207570646174656420627574746f6e207374796c6520616e6420746578742c2075706461746564206d6f64616c207769746820617070726f76616c20696e666f2c2061646465642064656661756c74207479706520666f7220564f54494e473b206261636b656e643a20757064617465642041504920656e64706f696e7420746f2061636365707420747970652066726f6d2066726f6e74656e642c207570646174656420707974686f6e207772617070657220666f722062756e20746f6f6c20746f2061636365707420706172616d6574657220616e64207061737320746f2062756e207363726970743b206167656e7420746f6f6c733a20757064617465642073637269707420746f20616363657074207479706520706172616d6574657220616e642076616c6964617465206974207573696e67204061696274632f7479706573206c6962726172792c20616464656420706172616d6574657220746f20636f6e74726163742066756e6374696f6e2063616c6c2e2045766572797468696e67206973207570646174656420616e642066756e6374696f6e616c206e6f772061732065766964656e636564206279207468697320636f6e747269627574696f6e206265696e67207375626d697474656420616e64206576616c75617465642e205468697320756e6c6f636b6564207468652074657374696e6720666c6f7720666f7220746865207465616d2077686963682077617320626c6f636b6564206279206572726f72732e202d2d2d204d65746164617461202d2d2d205469746c653a20496d706c656d656e74205479706520506172616d6574657220666f72204167656e74204163636f756e7420417070726f76616c73207c20546167733a20746563686e6963616c207570646174657c636f6e747261637420617070726f76616c7c646576656c6f706d656e7420746f6f6c737c74657374696e6720656e61626c656d656e747c696e6672617374727563747572652075706772616465207c205265666572656e63653a68747470733a2f2f782e636f6d2f77686f6162756464796465762f7374617475732f31393437373539363435333934393332303830",
      "(some \"hello world\")"
    ],
    "cost_result": {
      "total": {
        "write_length": 2072,
        "write_count": 15,
        "read_length": 87350,
        "read_count": 84,
        "runtime": 450512
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 3044,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/actions/aibtc-action-send-message.test.ts__public functions: aibtc-action-send-message__run() succeeds if called as a DAO action proposal",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "vote-on-action-proposal",
    "args": [
      "u1",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 307,
        "write_count": 2,
        "read_length": 38784,
        "read_count": 24,
        "runtime": 109926
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 305,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/actions/aibtc-action-send-message.test.ts__public functions: aibtc-action-send-message__run() succeeds if called as a DAO action proposal",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "vote-on-action-proposal",
    "args": [
      "u1",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 475,
        "write_count": 5,
        "read_length": 38788,
        "read_count": 30,
        "runtime": 136616
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 470,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/actions/aibtc-action-send-message.test.ts__public functions: aibtc-action-send-message__run() succeeds if called as a DAO action proposal",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "vote-on-action-proposal",
    "args": [
      "u1",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 475,
        "write_count": 5,
        "read_length": 38788,
        "read_count": 30,
        "runtime": 136616
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 470,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/actions/aibtc-action-send-message.test.ts__public functions: aibtc-action-send-message__run() succeeds if called as a DAO action proposal",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "vote-on-action-proposal",
    "args": [
      "u1",
      "true"
    ],
    "cost_result": {
      "total": {
        "write_length": 475,
        "write_count": 5,
        "read_length": 38788,
        "read_count": 30,
        "runtime": 136616
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 470,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/actions/aibtc-action-send-message.test.ts__public functions: aibtc-action-send-message__run() succeeds if called as a DAO action proposal",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-proposal-voting",
    "method": "conclude-action-proposal",
    "args": [
      "u1",
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-action-send-message"
    ],
    "cost_result": {
      "total": {
        "write_length": 356,
        "write_count": 8,
        "read_length": 91972,
        "read_count": 78,
        "runtime": 642059
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1006,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-charter.test.ts__public functions: aibtc-dao-charter__callback() should respond with (ok true)",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-charter",
    "method": "callback",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM",
      "0x74657374"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 3265,
        "read_count": 3,
        "runtime": 3998
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-charter.test.ts__public functions: aibtc-dao-charter__set-dao-charter()__fails if called directly by a user",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-charter",
    "method": "set-dao-charter",
    "args": [
      "u\"Test\""
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 7887,
        "read_count": 10,
        "runtime": 145337
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-charter.test.ts__read-only functions: aibtc-dao-charter__get-current-dao-charter-version() returns none before initialized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-charter",
    "method": "get-current-dao-charter-version",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 3283,
        "read_count": 4,
        "runtime": 4290
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-charter.test.ts__read-only functions: aibtc-dao-charter__get-current-dao-charter-version() returns expected value",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-charter.test.ts__read-only functions: aibtc-dao-charter__get-current-dao-charter-version() returns expected value",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-charter",
    "method": "get-current-dao-charter-version",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 3301,
        "read_count": 5,
        "runtime": 5006
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-charter.test.ts__read-only functions: aibtc-dao-charter__get-current-dao-charter() returns none before initialized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-charter",
    "method": "get-current-dao-charter",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 3301,
        "read_count": 5,
        "runtime": 4908
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-charter.test.ts__read-only functions: aibtc-dao-charter__get-current-dao-charter() returns expected value",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-charter.test.ts__read-only functions: aibtc-dao-charter__get-current-dao-charter() returns expected value",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-charter",
    "method": "get-current-dao-charter",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 3478,
        "read_count": 5,
        "runtime": 5085
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-charter.test.ts__read-only functions: aibtc-dao-charter__get-dao-charter() returns none before initialized",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-charter",
    "method": "get-dao-charter",
    "args": [
      "u1"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 3283,
        "read_count": 4,
        "runtime": 4504
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-charter.test.ts__read-only functions: aibtc-dao-charter__get-dao-charter() returns expected value",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-charter.test.ts__read-only functions: aibtc-dao-charter__get-dao-charter() returns expected value",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-charter",
    "method": "get-dao-charter",
    "args": [
      "u1"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 3460,
        "read_count": 4,
        "runtime": 4681
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-onchain-messaging.test.ts__public functions: aibtc-onchain-messaging__callback() should respond with (ok true)",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-onchain-messaging",
    "method": "callback",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM",
      "0x74657374"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 2753,
        "read_count": 3,
        "runtime": 3486
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-onchain-messaging.test.ts__public functions: aibtc-onchain-messaging__send() fails with empty message",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-onchain-messaging",
    "method": "send",
    "args": [
      "u\"\""
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 11703,
        "read_count": 11,
        "runtime": 98846
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-onchain-messaging.test.ts__public functions: aibtc-onchain-messaging__send() succeeds with valid message",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 23541,
        "read_count": 12,
        "runtime": 30605
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-onchain-messaging.test.ts__public functions: aibtc-onchain-messaging__send() succeeds with valid message",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-onchain-messaging.test.ts__public functions: aibtc-onchain-messaging__send() succeeds with valid message",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 158,
        "write_count": 7,
        "read_length": 26033,
        "read_count": 28,
        "runtime": 207892
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 480,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-onchain-messaging.test.ts__public functions: aibtc-onchain-messaging__send() succeeds with valid message",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-onchain-messaging.test.ts__public functions: aibtc-onchain-messaging__send() succeeds with valid message",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 214,
        "write_count": 7,
        "read_length": 26145,
        "read_count": 28,
        "runtime": 217613
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 536,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-onchain-messaging.test.ts__public functions: aibtc-onchain-messaging__send() succeeds with valid message",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-onchain-messaging.test.ts__public functions: aibtc-onchain-messaging__send() succeeds with valid message",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 270,
        "write_count": 7,
        "read_length": 26257,
        "read_count": 28,
        "runtime": 227334
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 592,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-onchain-messaging.test.ts__public functions: aibtc-onchain-messaging__send() succeeds with valid message",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-onchain-messaging.test.ts__public functions: aibtc-onchain-messaging__send() succeeds with valid message",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 326,
        "write_count": 7,
        "read_length": 26369,
        "read_count": 28,
        "runtime": 237055
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 648,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-onchain-messaging.test.ts__public functions: aibtc-onchain-messaging__send() succeeds with valid message",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-onchain-messaging.test.ts__public functions: aibtc-onchain-messaging__send() succeeds with valid message",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 382,
        "write_count": 7,
        "read_length": 26481,
        "read_count": 28,
        "runtime": 246776
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 704,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-onchain-messaging.test.ts__public functions: aibtc-onchain-messaging__send() succeeds with valid message",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-onchain-messaging.test.ts__public functions: aibtc-onchain-messaging__send() succeeds with valid message",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 438,
        "write_count": 7,
        "read_length": 26593,
        "read_count": 28,
        "runtime": 256497
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 760,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-onchain-messaging.test.ts__public functions: aibtc-onchain-messaging__send() succeeds with valid message",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-onchain-messaging.test.ts__public functions: aibtc-onchain-messaging__send() succeeds with valid message",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 494,
        "write_count": 7,
        "read_length": 26705,
        "read_count": 28,
        "runtime": 266218
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 816,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-onchain-messaging.test.ts__public functions: aibtc-onchain-messaging__send() succeeds with valid message",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-onchain-messaging.test.ts__public functions: aibtc-onchain-messaging__send() succeeds with valid message",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 550,
        "write_count": 7,
        "read_length": 26817,
        "read_count": 28,
        "runtime": 275939
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 872,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-onchain-messaging.test.ts__public functions: aibtc-onchain-messaging__send() succeeds with valid message",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-onchain-messaging.test.ts__public functions: aibtc-onchain-messaging__send() succeeds with valid message",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 606,
        "write_count": 7,
        "read_length": 26929,
        "read_count": 28,
        "runtime": 285660
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 928,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-onchain-messaging.test.ts__public functions: aibtc-onchain-messaging__send() succeeds with valid message",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-onchain-messaging.test.ts__public functions: aibtc-onchain-messaging__send() succeeds with valid message",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "buy-up-to",
    "args": [
      "u2"
    ],
    "cost_result": {
      "total": {
        "write_length": 742,
        "write_count": 19,
        "read_length": 33980,
        "read_count": 56,
        "runtime": 346467
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 2039,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-onchain-messaging.test.ts__public functions: aibtc-onchain-messaging__send() succeeds with valid message",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-pre-faktory",
    "method": "get-contract-status",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 24101,
        "read_count": 12,
        "runtime": 31165
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-onchain-messaging.test.ts__public functions: aibtc-onchain-messaging__send() succeeds with valid message",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-onchain-messaging.test.ts__public functions: aibtc-onchain-messaging__send() succeeds with valid message",
    "contract_id": "STV9K21TBFAK4KNRJXF5DFP8N7W46G4V9RJ5XDY2.sbtc-token",
    "method": "faucet",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 2304,
        "read_count": 5,
        "runtime": 4520
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 164,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-onchain-messaging.test.ts__public functions: aibtc-onchain-messaging__send() succeeds with valid message",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory-dex",
    "method": "buy",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-faktory",
      "u1000000"
    ],
    "cost_result": {
      "total": {
        "write_length": 60,
        "write_count": 12,
        "read_length": 69946,
        "read_count": 44,
        "runtime": 203148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 1364,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-onchain-messaging.test.ts__public functions: aibtc-onchain-messaging__send() succeeds with valid message",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-onchain-messaging",
    "method": "send",
    "args": [
      "u\"I finished the implementation for the latest agent account contract approval process. Agent account contract approvals and revocations now require specifying a type parameter that represents a hardcoded constant in the contract. Following the changes in the contract additional supporting changes were required in the frontend, backend, and agent tooling. Summary of the updates: frontend: updated button style and text, updated modal with approval info, added default type for VOTING; backend: updated API endpoint to accept type from frontend, updated python wrapper for bun tool to accept parameter and pass to bun script; agent tools: updated script to accept type parameter and validate it using @aibtc/types library, added parameter to contract function call. Everything is updated and functional now as evidenced by this contribution being submitted and evaluated. This unlocked the testing flow for the team which was blocked by errors. --- Metadata --- Title: Implement Type Parameter for Agent Account Approvals | Tags: technical update|contract approval|development tools|testing enablement|infrastructure upgrade | Reference:https://x.com/whoabuddydev/status/1947759645394932080\""
    ],
    "cost_result": {
      "total": {
        "write_length": 1,
        "write_count": 2,
        "read_length": 19687,
        "read_count": 22,
        "runtime": 280057
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 328,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-epoch.test.ts__public functions: aibtc-dao-epoch__callback() should respond with (ok true)",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-epoch",
    "method": "callback",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM",
      "0x74657374"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 1013,
        "read_count": 3,
        "runtime": 1746
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-epoch.test.ts__read-only functions: aibtc-dao-epoch__get-current-dao-epoch() returns expected value",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-dao",
    "method": "construct",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao"
    ],
    "cost_result": {
      "total": {
        "write_length": 757,
        "write_count": 15,
        "read_length": 29707,
        "read_count": 51,
        "runtime": 718446
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 742,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-epoch.test.ts__read-only functions: aibtc-dao-epoch__get-current-dao-epoch() returns expected value",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-epoch",
    "method": "get-current-dao-epoch",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 1015,
        "read_count": 4,
        "runtime": 2179
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-dao-epoch.test.ts__read-only functions: aibtc-dao-epoch__get-dao-epoch-length() returns expected value",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-dao-epoch",
    "method": "get-dao-epoch-length",
    "args": [],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 1013,
        "read_count": 3,
        "runtime": 1346
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-token-owner.test.ts__public functions: aibtc-token-owner__callback() should respond with (ok true)",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-token-owner",
    "method": "callback",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM",
      "0x74657374"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 2015,
        "read_count": 3,
        "runtime": 2748
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-token-owner.test.ts__public functions: aibtc-token-owner__set-token-uri() fails if called directly",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-token-owner",
    "method": "set-token-uri",
    "args": [
      "u\"https://example.com/token.json\""
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 6583,
        "read_count": 7,
        "runtime": 12148
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-token-owner.test.ts__public functions: aibtc-token-owner__transfer-ownership() fails if called directly",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-token-owner",
    "method": "transfer-ownership",
    "args": [
      "ST1SJ3DTE5DN7X54YDH5D64R3BCB6A2AG2ZQ8YPD5"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 6583,
        "read_count": 7,
        "runtime": 10388
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-rewards-account.test.ts__public functions: aibtc-rewards-account__callback() should respond with (ok true)",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-rewards-account",
    "method": "callback",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM",
      "0x74657374"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 2048,
        "read_count": 3,
        "runtime": 2781
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/extensions/aibtc-rewards-account.test.ts__public functions: aibtc-rewards-account__transfer-reward() fails if called directly",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-rewards-account",
    "method": "transfer-reward",
    "args": [
      "ST1SJ3DTE5DN7X54YDH5D64R3BCB6A2AG2ZQ8YPD5",
      "u100"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 10998,
        "read_count": 11,
        "runtime": 17296
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  },
  {
    "test_name": "tests/contracts/dao/proposals/aibtc-base-initialize-dao.test.ts__public functions: aibtc-base-initialize-dao__execute() fails if called directly",
    "contract_id": "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.aibtc-base-initialize-dao",
    "method": "execute",
    "args": [
      "ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM"
    ],
    "cost_result": {
      "total": {
        "write_length": 0,
        "write_count": 0,
        "read_length": 7634,
        "read_count": 7,
        "runtime": 125239
      },
      "limit": {
        "write_length": 15000000,
        "write_count": 15000,
        "read_length": 100000000,
        "read_count": 15000,
        "runtime": 5000000000
      },
      "memory": 0,
      "memory_limit": 100000000
    }
  }
]